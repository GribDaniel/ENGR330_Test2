$date
	Mon Oct 27 19:07:59 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_rca $end
$scope begin WIDTH_TEST[0] $end
$var wire 8 ! Sum [7:0] $end
$var wire 1 " Cout $end
$var reg 8 # A [7:0] $end
$var reg 8 $ B [7:0] $end
$var reg 1 % Cin $end
$var reg 9 & expected [8:0] $end
$var reg 1 ' expected_cout $end
$var reg 8 ( expected_sum [7:0] $end
$scope module DUT $end
$var wire 8 ) A [7:0] $end
$var wire 8 * B [7:0] $end
$var wire 1 % Cin $end
$var wire 9 + carry [8:0] $end
$var wire 8 , Sum [7:0] $end
$var wire 1 " Cout $end
$scope begin adderStage[0] $end
$scope module fA $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 / cin $end
$var wire 1 0 cout $end
$var wire 1 1 sum $end
$var wire 1 2 w1 $end
$var wire 1 3 w2 $end
$var wire 1 4 w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[1] $end
$scope module fA $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 cin $end
$var wire 1 8 cout $end
$var wire 1 9 sum $end
$var wire 1 : w1 $end
$var wire 1 ; w2 $end
$var wire 1 < w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[2] $end
$scope module fA $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 ? cin $end
$var wire 1 @ cout $end
$var wire 1 A sum $end
$var wire 1 B w1 $end
$var wire 1 C w2 $end
$var wire 1 D w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[3] $end
$scope module fA $end
$var wire 1 E a $end
$var wire 1 F b $end
$var wire 1 G cin $end
$var wire 1 H cout $end
$var wire 1 I sum $end
$var wire 1 J w1 $end
$var wire 1 K w2 $end
$var wire 1 L w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[4] $end
$scope module fA $end
$var wire 1 M a $end
$var wire 1 N b $end
$var wire 1 O cin $end
$var wire 1 P cout $end
$var wire 1 Q sum $end
$var wire 1 R w1 $end
$var wire 1 S w2 $end
$var wire 1 T w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[5] $end
$scope module fA $end
$var wire 1 U a $end
$var wire 1 V b $end
$var wire 1 W cin $end
$var wire 1 X cout $end
$var wire 1 Y sum $end
$var wire 1 Z w1 $end
$var wire 1 [ w2 $end
$var wire 1 \ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[6] $end
$scope module fA $end
$var wire 1 ] a $end
$var wire 1 ^ b $end
$var wire 1 _ cin $end
$var wire 1 ` cout $end
$var wire 1 a sum $end
$var wire 1 b w1 $end
$var wire 1 c w2 $end
$var wire 1 d w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[7] $end
$scope module fA $end
$var wire 1 e a $end
$var wire 1 f b $end
$var wire 1 g cin $end
$var wire 1 h cout $end
$var wire 1 i sum $end
$var wire 1 j w1 $end
$var wire 1 k w2 $end
$var wire 1 l w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin SIM $end
$var integer 32 m j [31:0] $end
$upscope $end
$scope task check_output $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
b0 ,
b0 +
b0 *
b0 )
bx (
x'
bx &
0%
b0 $
b0 #
0"
b0 !
$end
#5000
19
1I
11
b1111 !
b1111 ,
1A
1:
1J
12
1B
16
1F
1-
1=
b1010 $
b1010 *
b101 #
b101 )
b0 &
#10000
1"
1h
1l
1g
1`
1d
1_
1X
1\
1W
1P
1T
1O
1H
0I
1L
1G
1@
0A
1D
1?
18
09
1<
17
01
b111111110 +
10
0Q
0Y
0a
b0 !
b0 ,
0i
02
13
1R
1Z
1b
1j
1.
06
0F
15
1E
1M
1U
1]
1e
b1 $
b1 *
b11111111 #
b11111111 )
b1111 &
#15000
0G
0_
0"
0@
0X
0h
1A
0D
1Y
0\
1i
0l
0?
0O
0W
0g
08
0H
0P
0`
19
0<
0I
0L
0Q
0T
b10100110 !
b10100110 ,
0a
0d
14
12
03
0:
0J
0R
0b
1/
1f
0-
05
0E
0M
0]
0e
b11 +
1%
b10000001 $
b10000001 *
b100100 #
b100100 )
b100000000 &
#20000
1Q
1O
1H
1L
1G
1@
0A
1D
1?
b11111 +
18
0I
0i
11
04
09
1<
b1110001 !
b1110001 ,
1a
1J
0j
02
13
1:
1b
1>
1F
0f
1-
15
0=
1]
b1101 $
b1101 *
b1100011 #
b1100011 )
b1 m
0'
b10100110 (
b10100110 &
#25000
0i
0g
1G
0`
1@
1a
0d
0A
1D
0_
1?
0X
18
1Y
0\
09
1<
0O
0W
17
0H
0P
01
14
b1111 +
10
1I
0L
b1111000 !
b1111000 ,
1Q
0T
12
03
0J
1R
0.
16
0>
0F
1N
05
1=
b10010 $
b10010 *
b1100101 #
b1100101 )
b10 m
b1110001 (
b1110001 &
#30000
1i
1g
1`
0a
1d
1_
1X
0Y
1\
1W
1P
0Q
1T
1O
b11111111 +
1H
1A
0D
b10000100 !
b10000100 ,
0I
1L
0B
1C
1J
1>
1V
1^
1E
0U
0]
b1110110 $
b1110110 *
b1101 #
b1101 )
b11 m
b1111000 (
b1111000 &
#35000
0i
0g
0`
1a
0d
0_
0X
0A
1Y
0\
0?
0W
08
0P
1"
19
0<
1I
0L
b1111010 !
b1111010 ,
1Q
0T
b100011011 +
1h
0:
0J
1K
0R
1k
06
1F
0N
0V
0^
1f
1U
1]
1e
b10001100 $
b10001100 *
b11101101 #
b11101101 )
b100 m
b10000100 (
b10000100 &
#40000
0A
1i
0?
0Q
07
1g
08
0O
00
0a
1`
19
0<
0H
0Y
b10001011 !
b10001011 ,
11
04
0b
1c
1:
0K
0Z
0/
1.
0F
1^
0-
15
0E
0U
b110001000 +
0%
b11000101 $
b11000101 *
b11000110 #
b11000110 )
b101 m
1'
b1111010 (
b101111010 &
#45000
1A
1?
18
09
1<
1a
1"
17
1_
1Q
0i
1l
1h
b1011100 !
b1011100 ,
01
10
b111001110 +
1X
1R
1j
0k
02
13
1[
16
1N
1V
0f
1-
05
1U
b1110111 $
b1110111 *
b11100101 #
b11100101 )
b110 m
b10001011 (
b110001011 &
#50000
1\
1W
1P
0Q
1T
1O
07
1G
1H
1_
1g
11
00
0A
1D
1@
1i
0l
09
0<
0I
1L
0Y
1X
b10000001 !
b10000001 ,
0a
1d
b111111100 +
1`
12
03
1B
0C
0j
1k
0:
1;
1J
1Z
0[
1b
0c
0.
0>
1f
15
1E
0U
0]
b11110010 $
b11110010 *
b10001111 #
b10001111 )
b111 m
b1011100 (
b101011100 &
#55000
0O
0H
0_
1I
0L
0X
0G
1Y
0\
0@
0W
1A
0D
0P
0?
0Q
0T
b110000000 +
08
b10101101 !
b10101101 ,
0a
0d
0R
0;
0b
1c
1.
06
1>
0N
0V
0-
05
0=
1U
1]
b11000101 $
b11000101 *
b11101000 #
b11101000 )
b1000 m
b10000001 (
b110000001 &
#60000
1W
1P
1T
1a
19
1O
1_
0"
17
1G
0g
1I
1H
1Y
1X
1i
0l
0h
10
0A
1@
b11101011 !
b11101011 ,
0Q
0`
0J
1K
0Z
1[
1j
0k
02
13
0B
1C
1R
0c
1/
1F
1V
0^
0f
1-
1=
1M
0]
b1111011 +
1%
b101101 $
b101101 *
b10111101 #
b10111101 )
b1001 m
b10101101 (
b110101101 &
#65000
09
1A
0W
0g
07
0_
1?
0G
0O
0P
0`
00
1Y
0\
0X
18
0@
1I
0L
0H
0Q
0T
1a
0d
b1101101 !
b1101101 ,
0i
12
03
1Z
0[
1;
0C
1J
0K
0R
1b
0j
0/
0.
16
0>
0V
15
0=
0E
0M
1]
0e
b100 +
0%
b1010 $
b1010 *
b1100011 #
b1100011 )
b1010 m
0'
b11101011 (
b11101011 &
#70000
0A
1_
0?
0Y
1X
1i
19
08
b11001011 !
b11001011 ,
1a
0Z
1[
1j
02
1:
0;
0b
1/
1V
1f
0-
05
0]
b1000001 +
1%
b10101010 $
b10101010 *
b100000 #
b100000 )
b1011 m
b1101101 (
b1101101 &
#75000
1G
1@
17
1D
1Y
0a
10
1?
1W
0_
01
14
1I
19
18
b10101010 !
b10101010 ,
0A
1P
b101111 +
0X
12
0J
0:
1;
1B
1S
0[
1.
0F
1N
0V
0f
15
1=
1M
0U
1e
b10011 $
b10011 *
b10010110 #
b10010110 )
b1100 m
b11001011 (
b11001011 &
#80000
0T
0a
0O
0_
0G
0H
0W
0X
0@
1g
1I
0L
1Q
0P
1Y
0\
11
04
1A
0D
b10000111 +
1`
b10111111 !
b10111111 ,
1i
1J
1R
0S
1Z
02
13
0B
1c
0j
1F
0N
1V
1^
1-
0=
1]
0e
b1101011 $
b1101011 *
b1010011 #
b1010011 )
b1101 m
b10101010 (
b10101010 &
#85000
1O
1H
0I
1L
1G
0"
09
1@
0h
07
0g
0A
1D
1i
0l
00
b10110001 !
b10110001 ,
1Q
b11101 +
0`
1B
1j
03
0R
0c
0.
1>
0^
1f
0-
0M
0]
b10101110 $
b10101110 *
b10 #
b10 )
b1110 m
b10111111 (
b10111111 &
#90000
19
17
10
1a
b11110010 !
b11110010 ,
01
13
1b
0/
1.
0>
0F
0f
1-
1=
1E
1]
1e
b11110 +
0%
b100011 $
b100011 *
b11001111 #
b11001111 )
b1111 m
b10110001 (
b10110001 &
#95000
1"
1h
0i
1l
1g
1`
0a
1d
1_
0G
1X
0@
0Y
1\
1A
0D
1W
0?
1P
07
19
0<
08
0I
0L
b110 !
b110 ,
0Q
1T
b111110000 +
00
1:
0;
0J
1K
1R
03
0.
06
1>
1F
1N
0-
0=
b111100 $
b111100 *
b11001010 #
b11001010 )
b10000 m
b11110010 (
b11110010 &
#100000
0"
0h
1i
0l
0g
0`
1a
0d
0W
0_
0O
0P
0X
11
0A
1I
b0 +
0H
0Q
0T
b11001011 !
b11001011 ,
0Y
0\
12
0B
1J
0K
0R
0Z
1.
0>
0F
0N
0V
1^
0]
b1000001 $
b1000001 *
b10001010 #
b10001010 )
b10001 m
1'
b110 (
b100000110 &
#105000
1"
1h
0i
1l
1g
1`
0a
1d
1_
1X
1\
1W
1P
1T
17
1O
10
0I
1H
19
0Q
0Y
b10 !
b10 ,
01
14
0J
1K
0:
1R
1Z
1/
1F
0^
1f
05
1M
1U
1]
0e
b111110011 +
1%
b10001001 $
b10001001 *
b1111000 #
b1111000 )
b10010 m
0'
b11001011 (
b11001011 &
#110000
0g
0`
1a
0d
0_
0X
1Y
0\
0W
0P
09
1A
1I
1Q
0T
07
1?
1G
0O
00
18
1@
0H
b1111100 !
b1111100 ,
0i
0l
04
02
1;
1C
0K
0j
1k
0/
0.
16
1>
0F
1^
15
1=
0E
0]
1e
b100001100 +
0%
b11000110 $
b11000110 *
b10110110 #
b10110110 )
b10011 m
1'
b10 (
b100000010 &
#115000
b10100 m
b1111100 (
b101111100 &
#10000000
