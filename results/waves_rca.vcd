$date
	Tue Oct 28 18:26:25 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_rca $end
$var wire 8 ! sum8 [7:0] $end
$var wire 64 " sum64 [63:0] $end
$var wire 32 # sum32 [31:0] $end
$var wire 16 $ sum16 [15:0] $end
$var wire 1 % cout8 $end
$var wire 1 & cout64 $end
$var wire 1 ' cout32 $end
$var wire 1 ( cout16 $end
$var reg 16 ) A16 [15:0] $end
$var reg 32 * A32 [31:0] $end
$var reg 64 + A64 [63:0] $end
$var reg 8 , A8 [7:0] $end
$var reg 16 - B16 [15:0] $end
$var reg 32 . B32 [31:0] $end
$var reg 64 / B64 [63:0] $end
$var reg 8 0 B8 [7:0] $end
$var reg 1 1 Cin_local $end
$var reg 17 2 exp16 [16:0] $end
$var reg 33 3 exp32 [32:0] $end
$var reg 65 4 exp64 [64:0] $end
$var reg 9 5 exp8 [8:0] $end
$var integer 32 6 i [31:0] $end
$scope module dut16 $end
$var wire 16 7 A [15:0] $end
$var wire 16 8 B [15:0] $end
$var wire 1 1 Cin $end
$var wire 17 9 carry [16:0] $end
$var wire 16 : Sum [15:0] $end
$var wire 1 ( Cout $end
$scope begin adderStage[0] $end
$scope module fA $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 = cin $end
$var wire 1 > cout $end
$var wire 1 ? sum $end
$var wire 1 @ w1 $end
$var wire 1 A w2 $end
$var wire 1 B w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[1] $end
$scope module fA $end
$var wire 1 C a $end
$var wire 1 D b $end
$var wire 1 E cin $end
$var wire 1 F cout $end
$var wire 1 G sum $end
$var wire 1 H w1 $end
$var wire 1 I w2 $end
$var wire 1 J w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[2] $end
$scope module fA $end
$var wire 1 K a $end
$var wire 1 L b $end
$var wire 1 M cin $end
$var wire 1 N cout $end
$var wire 1 O sum $end
$var wire 1 P w1 $end
$var wire 1 Q w2 $end
$var wire 1 R w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[3] $end
$scope module fA $end
$var wire 1 S a $end
$var wire 1 T b $end
$var wire 1 U cin $end
$var wire 1 V cout $end
$var wire 1 W sum $end
$var wire 1 X w1 $end
$var wire 1 Y w2 $end
$var wire 1 Z w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[4] $end
$scope module fA $end
$var wire 1 [ a $end
$var wire 1 \ b $end
$var wire 1 ] cin $end
$var wire 1 ^ cout $end
$var wire 1 _ sum $end
$var wire 1 ` w1 $end
$var wire 1 a w2 $end
$var wire 1 b w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[5] $end
$scope module fA $end
$var wire 1 c a $end
$var wire 1 d b $end
$var wire 1 e cin $end
$var wire 1 f cout $end
$var wire 1 g sum $end
$var wire 1 h w1 $end
$var wire 1 i w2 $end
$var wire 1 j w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[6] $end
$scope module fA $end
$var wire 1 k a $end
$var wire 1 l b $end
$var wire 1 m cin $end
$var wire 1 n cout $end
$var wire 1 o sum $end
$var wire 1 p w1 $end
$var wire 1 q w2 $end
$var wire 1 r w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[7] $end
$scope module fA $end
$var wire 1 s a $end
$var wire 1 t b $end
$var wire 1 u cin $end
$var wire 1 v cout $end
$var wire 1 w sum $end
$var wire 1 x w1 $end
$var wire 1 y w2 $end
$var wire 1 z w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[8] $end
$scope module fA $end
$var wire 1 { a $end
$var wire 1 | b $end
$var wire 1 } cin $end
$var wire 1 ~ cout $end
$var wire 1 !" sum $end
$var wire 1 "" w1 $end
$var wire 1 #" w2 $end
$var wire 1 $" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[9] $end
$scope module fA $end
$var wire 1 %" a $end
$var wire 1 &" b $end
$var wire 1 '" cin $end
$var wire 1 (" cout $end
$var wire 1 )" sum $end
$var wire 1 *" w1 $end
$var wire 1 +" w2 $end
$var wire 1 ," w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[10] $end
$scope module fA $end
$var wire 1 -" a $end
$var wire 1 ." b $end
$var wire 1 /" cin $end
$var wire 1 0" cout $end
$var wire 1 1" sum $end
$var wire 1 2" w1 $end
$var wire 1 3" w2 $end
$var wire 1 4" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[11] $end
$scope module fA $end
$var wire 1 5" a $end
$var wire 1 6" b $end
$var wire 1 7" cin $end
$var wire 1 8" cout $end
$var wire 1 9" sum $end
$var wire 1 :" w1 $end
$var wire 1 ;" w2 $end
$var wire 1 <" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[12] $end
$scope module fA $end
$var wire 1 =" a $end
$var wire 1 >" b $end
$var wire 1 ?" cin $end
$var wire 1 @" cout $end
$var wire 1 A" sum $end
$var wire 1 B" w1 $end
$var wire 1 C" w2 $end
$var wire 1 D" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[13] $end
$scope module fA $end
$var wire 1 E" a $end
$var wire 1 F" b $end
$var wire 1 G" cin $end
$var wire 1 H" cout $end
$var wire 1 I" sum $end
$var wire 1 J" w1 $end
$var wire 1 K" w2 $end
$var wire 1 L" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[14] $end
$scope module fA $end
$var wire 1 M" a $end
$var wire 1 N" b $end
$var wire 1 O" cin $end
$var wire 1 P" cout $end
$var wire 1 Q" sum $end
$var wire 1 R" w1 $end
$var wire 1 S" w2 $end
$var wire 1 T" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[15] $end
$scope module fA $end
$var wire 1 U" a $end
$var wire 1 V" b $end
$var wire 1 W" cin $end
$var wire 1 X" cout $end
$var wire 1 Y" sum $end
$var wire 1 Z" w1 $end
$var wire 1 [" w2 $end
$var wire 1 \" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope module dut32 $end
$var wire 32 ]" A [31:0] $end
$var wire 32 ^" B [31:0] $end
$var wire 1 1 Cin $end
$var wire 33 _" carry [32:0] $end
$var wire 32 `" Sum [31:0] $end
$var wire 1 ' Cout $end
$scope begin adderStage[0] $end
$scope module fA $end
$var wire 1 a" a $end
$var wire 1 b" b $end
$var wire 1 c" cin $end
$var wire 1 d" cout $end
$var wire 1 e" sum $end
$var wire 1 f" w1 $end
$var wire 1 g" w2 $end
$var wire 1 h" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[1] $end
$scope module fA $end
$var wire 1 i" a $end
$var wire 1 j" b $end
$var wire 1 k" cin $end
$var wire 1 l" cout $end
$var wire 1 m" sum $end
$var wire 1 n" w1 $end
$var wire 1 o" w2 $end
$var wire 1 p" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[2] $end
$scope module fA $end
$var wire 1 q" a $end
$var wire 1 r" b $end
$var wire 1 s" cin $end
$var wire 1 t" cout $end
$var wire 1 u" sum $end
$var wire 1 v" w1 $end
$var wire 1 w" w2 $end
$var wire 1 x" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[3] $end
$scope module fA $end
$var wire 1 y" a $end
$var wire 1 z" b $end
$var wire 1 {" cin $end
$var wire 1 |" cout $end
$var wire 1 }" sum $end
$var wire 1 ~" w1 $end
$var wire 1 !# w2 $end
$var wire 1 "# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[4] $end
$scope module fA $end
$var wire 1 ## a $end
$var wire 1 $# b $end
$var wire 1 %# cin $end
$var wire 1 &# cout $end
$var wire 1 '# sum $end
$var wire 1 (# w1 $end
$var wire 1 )# w2 $end
$var wire 1 *# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[5] $end
$scope module fA $end
$var wire 1 +# a $end
$var wire 1 ,# b $end
$var wire 1 -# cin $end
$var wire 1 .# cout $end
$var wire 1 /# sum $end
$var wire 1 0# w1 $end
$var wire 1 1# w2 $end
$var wire 1 2# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[6] $end
$scope module fA $end
$var wire 1 3# a $end
$var wire 1 4# b $end
$var wire 1 5# cin $end
$var wire 1 6# cout $end
$var wire 1 7# sum $end
$var wire 1 8# w1 $end
$var wire 1 9# w2 $end
$var wire 1 :# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[7] $end
$scope module fA $end
$var wire 1 ;# a $end
$var wire 1 <# b $end
$var wire 1 =# cin $end
$var wire 1 ># cout $end
$var wire 1 ?# sum $end
$var wire 1 @# w1 $end
$var wire 1 A# w2 $end
$var wire 1 B# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[8] $end
$scope module fA $end
$var wire 1 C# a $end
$var wire 1 D# b $end
$var wire 1 E# cin $end
$var wire 1 F# cout $end
$var wire 1 G# sum $end
$var wire 1 H# w1 $end
$var wire 1 I# w2 $end
$var wire 1 J# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[9] $end
$scope module fA $end
$var wire 1 K# a $end
$var wire 1 L# b $end
$var wire 1 M# cin $end
$var wire 1 N# cout $end
$var wire 1 O# sum $end
$var wire 1 P# w1 $end
$var wire 1 Q# w2 $end
$var wire 1 R# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[10] $end
$scope module fA $end
$var wire 1 S# a $end
$var wire 1 T# b $end
$var wire 1 U# cin $end
$var wire 1 V# cout $end
$var wire 1 W# sum $end
$var wire 1 X# w1 $end
$var wire 1 Y# w2 $end
$var wire 1 Z# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[11] $end
$scope module fA $end
$var wire 1 [# a $end
$var wire 1 \# b $end
$var wire 1 ]# cin $end
$var wire 1 ^# cout $end
$var wire 1 _# sum $end
$var wire 1 `# w1 $end
$var wire 1 a# w2 $end
$var wire 1 b# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[12] $end
$scope module fA $end
$var wire 1 c# a $end
$var wire 1 d# b $end
$var wire 1 e# cin $end
$var wire 1 f# cout $end
$var wire 1 g# sum $end
$var wire 1 h# w1 $end
$var wire 1 i# w2 $end
$var wire 1 j# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[13] $end
$scope module fA $end
$var wire 1 k# a $end
$var wire 1 l# b $end
$var wire 1 m# cin $end
$var wire 1 n# cout $end
$var wire 1 o# sum $end
$var wire 1 p# w1 $end
$var wire 1 q# w2 $end
$var wire 1 r# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[14] $end
$scope module fA $end
$var wire 1 s# a $end
$var wire 1 t# b $end
$var wire 1 u# cin $end
$var wire 1 v# cout $end
$var wire 1 w# sum $end
$var wire 1 x# w1 $end
$var wire 1 y# w2 $end
$var wire 1 z# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[15] $end
$scope module fA $end
$var wire 1 {# a $end
$var wire 1 |# b $end
$var wire 1 }# cin $end
$var wire 1 ~# cout $end
$var wire 1 !$ sum $end
$var wire 1 "$ w1 $end
$var wire 1 #$ w2 $end
$var wire 1 $$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[16] $end
$scope module fA $end
$var wire 1 %$ a $end
$var wire 1 &$ b $end
$var wire 1 '$ cin $end
$var wire 1 ($ cout $end
$var wire 1 )$ sum $end
$var wire 1 *$ w1 $end
$var wire 1 +$ w2 $end
$var wire 1 ,$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[17] $end
$scope module fA $end
$var wire 1 -$ a $end
$var wire 1 .$ b $end
$var wire 1 /$ cin $end
$var wire 1 0$ cout $end
$var wire 1 1$ sum $end
$var wire 1 2$ w1 $end
$var wire 1 3$ w2 $end
$var wire 1 4$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[18] $end
$scope module fA $end
$var wire 1 5$ a $end
$var wire 1 6$ b $end
$var wire 1 7$ cin $end
$var wire 1 8$ cout $end
$var wire 1 9$ sum $end
$var wire 1 :$ w1 $end
$var wire 1 ;$ w2 $end
$var wire 1 <$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[19] $end
$scope module fA $end
$var wire 1 =$ a $end
$var wire 1 >$ b $end
$var wire 1 ?$ cin $end
$var wire 1 @$ cout $end
$var wire 1 A$ sum $end
$var wire 1 B$ w1 $end
$var wire 1 C$ w2 $end
$var wire 1 D$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[20] $end
$scope module fA $end
$var wire 1 E$ a $end
$var wire 1 F$ b $end
$var wire 1 G$ cin $end
$var wire 1 H$ cout $end
$var wire 1 I$ sum $end
$var wire 1 J$ w1 $end
$var wire 1 K$ w2 $end
$var wire 1 L$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[21] $end
$scope module fA $end
$var wire 1 M$ a $end
$var wire 1 N$ b $end
$var wire 1 O$ cin $end
$var wire 1 P$ cout $end
$var wire 1 Q$ sum $end
$var wire 1 R$ w1 $end
$var wire 1 S$ w2 $end
$var wire 1 T$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[22] $end
$scope module fA $end
$var wire 1 U$ a $end
$var wire 1 V$ b $end
$var wire 1 W$ cin $end
$var wire 1 X$ cout $end
$var wire 1 Y$ sum $end
$var wire 1 Z$ w1 $end
$var wire 1 [$ w2 $end
$var wire 1 \$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[23] $end
$scope module fA $end
$var wire 1 ]$ a $end
$var wire 1 ^$ b $end
$var wire 1 _$ cin $end
$var wire 1 `$ cout $end
$var wire 1 a$ sum $end
$var wire 1 b$ w1 $end
$var wire 1 c$ w2 $end
$var wire 1 d$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[24] $end
$scope module fA $end
$var wire 1 e$ a $end
$var wire 1 f$ b $end
$var wire 1 g$ cin $end
$var wire 1 h$ cout $end
$var wire 1 i$ sum $end
$var wire 1 j$ w1 $end
$var wire 1 k$ w2 $end
$var wire 1 l$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[25] $end
$scope module fA $end
$var wire 1 m$ a $end
$var wire 1 n$ b $end
$var wire 1 o$ cin $end
$var wire 1 p$ cout $end
$var wire 1 q$ sum $end
$var wire 1 r$ w1 $end
$var wire 1 s$ w2 $end
$var wire 1 t$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[26] $end
$scope module fA $end
$var wire 1 u$ a $end
$var wire 1 v$ b $end
$var wire 1 w$ cin $end
$var wire 1 x$ cout $end
$var wire 1 y$ sum $end
$var wire 1 z$ w1 $end
$var wire 1 {$ w2 $end
$var wire 1 |$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[27] $end
$scope module fA $end
$var wire 1 }$ a $end
$var wire 1 ~$ b $end
$var wire 1 !% cin $end
$var wire 1 "% cout $end
$var wire 1 #% sum $end
$var wire 1 $% w1 $end
$var wire 1 %% w2 $end
$var wire 1 &% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[28] $end
$scope module fA $end
$var wire 1 '% a $end
$var wire 1 (% b $end
$var wire 1 )% cin $end
$var wire 1 *% cout $end
$var wire 1 +% sum $end
$var wire 1 ,% w1 $end
$var wire 1 -% w2 $end
$var wire 1 .% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[29] $end
$scope module fA $end
$var wire 1 /% a $end
$var wire 1 0% b $end
$var wire 1 1% cin $end
$var wire 1 2% cout $end
$var wire 1 3% sum $end
$var wire 1 4% w1 $end
$var wire 1 5% w2 $end
$var wire 1 6% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[30] $end
$scope module fA $end
$var wire 1 7% a $end
$var wire 1 8% b $end
$var wire 1 9% cin $end
$var wire 1 :% cout $end
$var wire 1 ;% sum $end
$var wire 1 <% w1 $end
$var wire 1 =% w2 $end
$var wire 1 >% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[31] $end
$scope module fA $end
$var wire 1 ?% a $end
$var wire 1 @% b $end
$var wire 1 A% cin $end
$var wire 1 B% cout $end
$var wire 1 C% sum $end
$var wire 1 D% w1 $end
$var wire 1 E% w2 $end
$var wire 1 F% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope module dut64 $end
$var wire 64 G% A [63:0] $end
$var wire 64 H% B [63:0] $end
$var wire 1 1 Cin $end
$var wire 65 I% carry [64:0] $end
$var wire 64 J% Sum [63:0] $end
$var wire 1 & Cout $end
$scope begin adderStage[0] $end
$scope module fA $end
$var wire 1 K% a $end
$var wire 1 L% b $end
$var wire 1 M% cin $end
$var wire 1 N% cout $end
$var wire 1 O% sum $end
$var wire 1 P% w1 $end
$var wire 1 Q% w2 $end
$var wire 1 R% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[1] $end
$scope module fA $end
$var wire 1 S% a $end
$var wire 1 T% b $end
$var wire 1 U% cin $end
$var wire 1 V% cout $end
$var wire 1 W% sum $end
$var wire 1 X% w1 $end
$var wire 1 Y% w2 $end
$var wire 1 Z% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[2] $end
$scope module fA $end
$var wire 1 [% a $end
$var wire 1 \% b $end
$var wire 1 ]% cin $end
$var wire 1 ^% cout $end
$var wire 1 _% sum $end
$var wire 1 `% w1 $end
$var wire 1 a% w2 $end
$var wire 1 b% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[3] $end
$scope module fA $end
$var wire 1 c% a $end
$var wire 1 d% b $end
$var wire 1 e% cin $end
$var wire 1 f% cout $end
$var wire 1 g% sum $end
$var wire 1 h% w1 $end
$var wire 1 i% w2 $end
$var wire 1 j% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[4] $end
$scope module fA $end
$var wire 1 k% a $end
$var wire 1 l% b $end
$var wire 1 m% cin $end
$var wire 1 n% cout $end
$var wire 1 o% sum $end
$var wire 1 p% w1 $end
$var wire 1 q% w2 $end
$var wire 1 r% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[5] $end
$scope module fA $end
$var wire 1 s% a $end
$var wire 1 t% b $end
$var wire 1 u% cin $end
$var wire 1 v% cout $end
$var wire 1 w% sum $end
$var wire 1 x% w1 $end
$var wire 1 y% w2 $end
$var wire 1 z% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[6] $end
$scope module fA $end
$var wire 1 {% a $end
$var wire 1 |% b $end
$var wire 1 }% cin $end
$var wire 1 ~% cout $end
$var wire 1 !& sum $end
$var wire 1 "& w1 $end
$var wire 1 #& w2 $end
$var wire 1 $& w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[7] $end
$scope module fA $end
$var wire 1 %& a $end
$var wire 1 && b $end
$var wire 1 '& cin $end
$var wire 1 (& cout $end
$var wire 1 )& sum $end
$var wire 1 *& w1 $end
$var wire 1 +& w2 $end
$var wire 1 ,& w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[8] $end
$scope module fA $end
$var wire 1 -& a $end
$var wire 1 .& b $end
$var wire 1 /& cin $end
$var wire 1 0& cout $end
$var wire 1 1& sum $end
$var wire 1 2& w1 $end
$var wire 1 3& w2 $end
$var wire 1 4& w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[9] $end
$scope module fA $end
$var wire 1 5& a $end
$var wire 1 6& b $end
$var wire 1 7& cin $end
$var wire 1 8& cout $end
$var wire 1 9& sum $end
$var wire 1 :& w1 $end
$var wire 1 ;& w2 $end
$var wire 1 <& w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[10] $end
$scope module fA $end
$var wire 1 =& a $end
$var wire 1 >& b $end
$var wire 1 ?& cin $end
$var wire 1 @& cout $end
$var wire 1 A& sum $end
$var wire 1 B& w1 $end
$var wire 1 C& w2 $end
$var wire 1 D& w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[11] $end
$scope module fA $end
$var wire 1 E& a $end
$var wire 1 F& b $end
$var wire 1 G& cin $end
$var wire 1 H& cout $end
$var wire 1 I& sum $end
$var wire 1 J& w1 $end
$var wire 1 K& w2 $end
$var wire 1 L& w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[12] $end
$scope module fA $end
$var wire 1 M& a $end
$var wire 1 N& b $end
$var wire 1 O& cin $end
$var wire 1 P& cout $end
$var wire 1 Q& sum $end
$var wire 1 R& w1 $end
$var wire 1 S& w2 $end
$var wire 1 T& w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[13] $end
$scope module fA $end
$var wire 1 U& a $end
$var wire 1 V& b $end
$var wire 1 W& cin $end
$var wire 1 X& cout $end
$var wire 1 Y& sum $end
$var wire 1 Z& w1 $end
$var wire 1 [& w2 $end
$var wire 1 \& w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[14] $end
$scope module fA $end
$var wire 1 ]& a $end
$var wire 1 ^& b $end
$var wire 1 _& cin $end
$var wire 1 `& cout $end
$var wire 1 a& sum $end
$var wire 1 b& w1 $end
$var wire 1 c& w2 $end
$var wire 1 d& w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[15] $end
$scope module fA $end
$var wire 1 e& a $end
$var wire 1 f& b $end
$var wire 1 g& cin $end
$var wire 1 h& cout $end
$var wire 1 i& sum $end
$var wire 1 j& w1 $end
$var wire 1 k& w2 $end
$var wire 1 l& w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[16] $end
$scope module fA $end
$var wire 1 m& a $end
$var wire 1 n& b $end
$var wire 1 o& cin $end
$var wire 1 p& cout $end
$var wire 1 q& sum $end
$var wire 1 r& w1 $end
$var wire 1 s& w2 $end
$var wire 1 t& w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[17] $end
$scope module fA $end
$var wire 1 u& a $end
$var wire 1 v& b $end
$var wire 1 w& cin $end
$var wire 1 x& cout $end
$var wire 1 y& sum $end
$var wire 1 z& w1 $end
$var wire 1 {& w2 $end
$var wire 1 |& w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[18] $end
$scope module fA $end
$var wire 1 }& a $end
$var wire 1 ~& b $end
$var wire 1 !' cin $end
$var wire 1 "' cout $end
$var wire 1 #' sum $end
$var wire 1 $' w1 $end
$var wire 1 %' w2 $end
$var wire 1 &' w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[19] $end
$scope module fA $end
$var wire 1 '' a $end
$var wire 1 (' b $end
$var wire 1 )' cin $end
$var wire 1 *' cout $end
$var wire 1 +' sum $end
$var wire 1 ,' w1 $end
$var wire 1 -' w2 $end
$var wire 1 .' w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[20] $end
$scope module fA $end
$var wire 1 /' a $end
$var wire 1 0' b $end
$var wire 1 1' cin $end
$var wire 1 2' cout $end
$var wire 1 3' sum $end
$var wire 1 4' w1 $end
$var wire 1 5' w2 $end
$var wire 1 6' w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[21] $end
$scope module fA $end
$var wire 1 7' a $end
$var wire 1 8' b $end
$var wire 1 9' cin $end
$var wire 1 :' cout $end
$var wire 1 ;' sum $end
$var wire 1 <' w1 $end
$var wire 1 =' w2 $end
$var wire 1 >' w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[22] $end
$scope module fA $end
$var wire 1 ?' a $end
$var wire 1 @' b $end
$var wire 1 A' cin $end
$var wire 1 B' cout $end
$var wire 1 C' sum $end
$var wire 1 D' w1 $end
$var wire 1 E' w2 $end
$var wire 1 F' w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[23] $end
$scope module fA $end
$var wire 1 G' a $end
$var wire 1 H' b $end
$var wire 1 I' cin $end
$var wire 1 J' cout $end
$var wire 1 K' sum $end
$var wire 1 L' w1 $end
$var wire 1 M' w2 $end
$var wire 1 N' w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[24] $end
$scope module fA $end
$var wire 1 O' a $end
$var wire 1 P' b $end
$var wire 1 Q' cin $end
$var wire 1 R' cout $end
$var wire 1 S' sum $end
$var wire 1 T' w1 $end
$var wire 1 U' w2 $end
$var wire 1 V' w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[25] $end
$scope module fA $end
$var wire 1 W' a $end
$var wire 1 X' b $end
$var wire 1 Y' cin $end
$var wire 1 Z' cout $end
$var wire 1 [' sum $end
$var wire 1 \' w1 $end
$var wire 1 ]' w2 $end
$var wire 1 ^' w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[26] $end
$scope module fA $end
$var wire 1 _' a $end
$var wire 1 `' b $end
$var wire 1 a' cin $end
$var wire 1 b' cout $end
$var wire 1 c' sum $end
$var wire 1 d' w1 $end
$var wire 1 e' w2 $end
$var wire 1 f' w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[27] $end
$scope module fA $end
$var wire 1 g' a $end
$var wire 1 h' b $end
$var wire 1 i' cin $end
$var wire 1 j' cout $end
$var wire 1 k' sum $end
$var wire 1 l' w1 $end
$var wire 1 m' w2 $end
$var wire 1 n' w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[28] $end
$scope module fA $end
$var wire 1 o' a $end
$var wire 1 p' b $end
$var wire 1 q' cin $end
$var wire 1 r' cout $end
$var wire 1 s' sum $end
$var wire 1 t' w1 $end
$var wire 1 u' w2 $end
$var wire 1 v' w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[29] $end
$scope module fA $end
$var wire 1 w' a $end
$var wire 1 x' b $end
$var wire 1 y' cin $end
$var wire 1 z' cout $end
$var wire 1 {' sum $end
$var wire 1 |' w1 $end
$var wire 1 }' w2 $end
$var wire 1 ~' w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[30] $end
$scope module fA $end
$var wire 1 !( a $end
$var wire 1 "( b $end
$var wire 1 #( cin $end
$var wire 1 $( cout $end
$var wire 1 %( sum $end
$var wire 1 &( w1 $end
$var wire 1 '( w2 $end
$var wire 1 (( w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[31] $end
$scope module fA $end
$var wire 1 )( a $end
$var wire 1 *( b $end
$var wire 1 +( cin $end
$var wire 1 ,( cout $end
$var wire 1 -( sum $end
$var wire 1 .( w1 $end
$var wire 1 /( w2 $end
$var wire 1 0( w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[32] $end
$scope module fA $end
$var wire 1 1( a $end
$var wire 1 2( b $end
$var wire 1 3( cin $end
$var wire 1 4( cout $end
$var wire 1 5( sum $end
$var wire 1 6( w1 $end
$var wire 1 7( w2 $end
$var wire 1 8( w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[33] $end
$scope module fA $end
$var wire 1 9( a $end
$var wire 1 :( b $end
$var wire 1 ;( cin $end
$var wire 1 <( cout $end
$var wire 1 =( sum $end
$var wire 1 >( w1 $end
$var wire 1 ?( w2 $end
$var wire 1 @( w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[34] $end
$scope module fA $end
$var wire 1 A( a $end
$var wire 1 B( b $end
$var wire 1 C( cin $end
$var wire 1 D( cout $end
$var wire 1 E( sum $end
$var wire 1 F( w1 $end
$var wire 1 G( w2 $end
$var wire 1 H( w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[35] $end
$scope module fA $end
$var wire 1 I( a $end
$var wire 1 J( b $end
$var wire 1 K( cin $end
$var wire 1 L( cout $end
$var wire 1 M( sum $end
$var wire 1 N( w1 $end
$var wire 1 O( w2 $end
$var wire 1 P( w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[36] $end
$scope module fA $end
$var wire 1 Q( a $end
$var wire 1 R( b $end
$var wire 1 S( cin $end
$var wire 1 T( cout $end
$var wire 1 U( sum $end
$var wire 1 V( w1 $end
$var wire 1 W( w2 $end
$var wire 1 X( w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[37] $end
$scope module fA $end
$var wire 1 Y( a $end
$var wire 1 Z( b $end
$var wire 1 [( cin $end
$var wire 1 \( cout $end
$var wire 1 ]( sum $end
$var wire 1 ^( w1 $end
$var wire 1 _( w2 $end
$var wire 1 `( w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[38] $end
$scope module fA $end
$var wire 1 a( a $end
$var wire 1 b( b $end
$var wire 1 c( cin $end
$var wire 1 d( cout $end
$var wire 1 e( sum $end
$var wire 1 f( w1 $end
$var wire 1 g( w2 $end
$var wire 1 h( w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[39] $end
$scope module fA $end
$var wire 1 i( a $end
$var wire 1 j( b $end
$var wire 1 k( cin $end
$var wire 1 l( cout $end
$var wire 1 m( sum $end
$var wire 1 n( w1 $end
$var wire 1 o( w2 $end
$var wire 1 p( w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[40] $end
$scope module fA $end
$var wire 1 q( a $end
$var wire 1 r( b $end
$var wire 1 s( cin $end
$var wire 1 t( cout $end
$var wire 1 u( sum $end
$var wire 1 v( w1 $end
$var wire 1 w( w2 $end
$var wire 1 x( w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[41] $end
$scope module fA $end
$var wire 1 y( a $end
$var wire 1 z( b $end
$var wire 1 {( cin $end
$var wire 1 |( cout $end
$var wire 1 }( sum $end
$var wire 1 ~( w1 $end
$var wire 1 !) w2 $end
$var wire 1 ") w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[42] $end
$scope module fA $end
$var wire 1 #) a $end
$var wire 1 $) b $end
$var wire 1 %) cin $end
$var wire 1 &) cout $end
$var wire 1 ') sum $end
$var wire 1 () w1 $end
$var wire 1 )) w2 $end
$var wire 1 *) w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[43] $end
$scope module fA $end
$var wire 1 +) a $end
$var wire 1 ,) b $end
$var wire 1 -) cin $end
$var wire 1 .) cout $end
$var wire 1 /) sum $end
$var wire 1 0) w1 $end
$var wire 1 1) w2 $end
$var wire 1 2) w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[44] $end
$scope module fA $end
$var wire 1 3) a $end
$var wire 1 4) b $end
$var wire 1 5) cin $end
$var wire 1 6) cout $end
$var wire 1 7) sum $end
$var wire 1 8) w1 $end
$var wire 1 9) w2 $end
$var wire 1 :) w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[45] $end
$scope module fA $end
$var wire 1 ;) a $end
$var wire 1 <) b $end
$var wire 1 =) cin $end
$var wire 1 >) cout $end
$var wire 1 ?) sum $end
$var wire 1 @) w1 $end
$var wire 1 A) w2 $end
$var wire 1 B) w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[46] $end
$scope module fA $end
$var wire 1 C) a $end
$var wire 1 D) b $end
$var wire 1 E) cin $end
$var wire 1 F) cout $end
$var wire 1 G) sum $end
$var wire 1 H) w1 $end
$var wire 1 I) w2 $end
$var wire 1 J) w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[47] $end
$scope module fA $end
$var wire 1 K) a $end
$var wire 1 L) b $end
$var wire 1 M) cin $end
$var wire 1 N) cout $end
$var wire 1 O) sum $end
$var wire 1 P) w1 $end
$var wire 1 Q) w2 $end
$var wire 1 R) w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[48] $end
$scope module fA $end
$var wire 1 S) a $end
$var wire 1 T) b $end
$var wire 1 U) cin $end
$var wire 1 V) cout $end
$var wire 1 W) sum $end
$var wire 1 X) w1 $end
$var wire 1 Y) w2 $end
$var wire 1 Z) w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[49] $end
$scope module fA $end
$var wire 1 [) a $end
$var wire 1 \) b $end
$var wire 1 ]) cin $end
$var wire 1 ^) cout $end
$var wire 1 _) sum $end
$var wire 1 `) w1 $end
$var wire 1 a) w2 $end
$var wire 1 b) w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[50] $end
$scope module fA $end
$var wire 1 c) a $end
$var wire 1 d) b $end
$var wire 1 e) cin $end
$var wire 1 f) cout $end
$var wire 1 g) sum $end
$var wire 1 h) w1 $end
$var wire 1 i) w2 $end
$var wire 1 j) w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[51] $end
$scope module fA $end
$var wire 1 k) a $end
$var wire 1 l) b $end
$var wire 1 m) cin $end
$var wire 1 n) cout $end
$var wire 1 o) sum $end
$var wire 1 p) w1 $end
$var wire 1 q) w2 $end
$var wire 1 r) w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[52] $end
$scope module fA $end
$var wire 1 s) a $end
$var wire 1 t) b $end
$var wire 1 u) cin $end
$var wire 1 v) cout $end
$var wire 1 w) sum $end
$var wire 1 x) w1 $end
$var wire 1 y) w2 $end
$var wire 1 z) w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[53] $end
$scope module fA $end
$var wire 1 {) a $end
$var wire 1 |) b $end
$var wire 1 }) cin $end
$var wire 1 ~) cout $end
$var wire 1 !* sum $end
$var wire 1 "* w1 $end
$var wire 1 #* w2 $end
$var wire 1 $* w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[54] $end
$scope module fA $end
$var wire 1 %* a $end
$var wire 1 &* b $end
$var wire 1 '* cin $end
$var wire 1 (* cout $end
$var wire 1 )* sum $end
$var wire 1 ** w1 $end
$var wire 1 +* w2 $end
$var wire 1 ,* w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[55] $end
$scope module fA $end
$var wire 1 -* a $end
$var wire 1 .* b $end
$var wire 1 /* cin $end
$var wire 1 0* cout $end
$var wire 1 1* sum $end
$var wire 1 2* w1 $end
$var wire 1 3* w2 $end
$var wire 1 4* w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[56] $end
$scope module fA $end
$var wire 1 5* a $end
$var wire 1 6* b $end
$var wire 1 7* cin $end
$var wire 1 8* cout $end
$var wire 1 9* sum $end
$var wire 1 :* w1 $end
$var wire 1 ;* w2 $end
$var wire 1 <* w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[57] $end
$scope module fA $end
$var wire 1 =* a $end
$var wire 1 >* b $end
$var wire 1 ?* cin $end
$var wire 1 @* cout $end
$var wire 1 A* sum $end
$var wire 1 B* w1 $end
$var wire 1 C* w2 $end
$var wire 1 D* w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[58] $end
$scope module fA $end
$var wire 1 E* a $end
$var wire 1 F* b $end
$var wire 1 G* cin $end
$var wire 1 H* cout $end
$var wire 1 I* sum $end
$var wire 1 J* w1 $end
$var wire 1 K* w2 $end
$var wire 1 L* w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[59] $end
$scope module fA $end
$var wire 1 M* a $end
$var wire 1 N* b $end
$var wire 1 O* cin $end
$var wire 1 P* cout $end
$var wire 1 Q* sum $end
$var wire 1 R* w1 $end
$var wire 1 S* w2 $end
$var wire 1 T* w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[60] $end
$scope module fA $end
$var wire 1 U* a $end
$var wire 1 V* b $end
$var wire 1 W* cin $end
$var wire 1 X* cout $end
$var wire 1 Y* sum $end
$var wire 1 Z* w1 $end
$var wire 1 [* w2 $end
$var wire 1 \* w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[61] $end
$scope module fA $end
$var wire 1 ]* a $end
$var wire 1 ^* b $end
$var wire 1 _* cin $end
$var wire 1 `* cout $end
$var wire 1 a* sum $end
$var wire 1 b* w1 $end
$var wire 1 c* w2 $end
$var wire 1 d* w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[62] $end
$scope module fA $end
$var wire 1 e* a $end
$var wire 1 f* b $end
$var wire 1 g* cin $end
$var wire 1 h* cout $end
$var wire 1 i* sum $end
$var wire 1 j* w1 $end
$var wire 1 k* w2 $end
$var wire 1 l* w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[63] $end
$scope module fA $end
$var wire 1 m* a $end
$var wire 1 n* b $end
$var wire 1 o* cin $end
$var wire 1 p* cout $end
$var wire 1 q* sum $end
$var wire 1 r* w1 $end
$var wire 1 s* w2 $end
$var wire 1 t* w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope module dut8 $end
$var wire 8 u* A [7:0] $end
$var wire 8 v* B [7:0] $end
$var wire 1 1 Cin $end
$var wire 9 w* carry [8:0] $end
$var wire 8 x* Sum [7:0] $end
$var wire 1 % Cout $end
$scope begin adderStage[0] $end
$scope module fA $end
$var wire 1 y* a $end
$var wire 1 z* b $end
$var wire 1 {* cin $end
$var wire 1 |* cout $end
$var wire 1 }* sum $end
$var wire 1 ~* w1 $end
$var wire 1 !+ w2 $end
$var wire 1 "+ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[1] $end
$scope module fA $end
$var wire 1 #+ a $end
$var wire 1 $+ b $end
$var wire 1 %+ cin $end
$var wire 1 &+ cout $end
$var wire 1 '+ sum $end
$var wire 1 (+ w1 $end
$var wire 1 )+ w2 $end
$var wire 1 *+ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[2] $end
$scope module fA $end
$var wire 1 ++ a $end
$var wire 1 ,+ b $end
$var wire 1 -+ cin $end
$var wire 1 .+ cout $end
$var wire 1 /+ sum $end
$var wire 1 0+ w1 $end
$var wire 1 1+ w2 $end
$var wire 1 2+ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[3] $end
$scope module fA $end
$var wire 1 3+ a $end
$var wire 1 4+ b $end
$var wire 1 5+ cin $end
$var wire 1 6+ cout $end
$var wire 1 7+ sum $end
$var wire 1 8+ w1 $end
$var wire 1 9+ w2 $end
$var wire 1 :+ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[4] $end
$scope module fA $end
$var wire 1 ;+ a $end
$var wire 1 <+ b $end
$var wire 1 =+ cin $end
$var wire 1 >+ cout $end
$var wire 1 ?+ sum $end
$var wire 1 @+ w1 $end
$var wire 1 A+ w2 $end
$var wire 1 B+ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[5] $end
$scope module fA $end
$var wire 1 C+ a $end
$var wire 1 D+ b $end
$var wire 1 E+ cin $end
$var wire 1 F+ cout $end
$var wire 1 G+ sum $end
$var wire 1 H+ w1 $end
$var wire 1 I+ w2 $end
$var wire 1 J+ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[6] $end
$scope module fA $end
$var wire 1 K+ a $end
$var wire 1 L+ b $end
$var wire 1 M+ cin $end
$var wire 1 N+ cout $end
$var wire 1 O+ sum $end
$var wire 1 P+ w1 $end
$var wire 1 Q+ w2 $end
$var wire 1 R+ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[7] $end
$scope module fA $end
$var wire 1 S+ a $end
$var wire 1 T+ b $end
$var wire 1 U+ cin $end
$var wire 1 V+ cout $end
$var wire 1 W+ sum $end
$var wire 1 X+ w1 $end
$var wire 1 Y+ w2 $end
$var wire 1 Z+ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope task check16 $end
$var reg 17 [+ expected [16:0] $end
$var reg 17 \+ got [16:0] $end
$upscope $end
$scope task check32 $end
$var reg 33 ]+ expected [32:0] $end
$var reg 33 ^+ got [32:0] $end
$upscope $end
$scope task check64 $end
$var reg 65 _+ expected [64:0] $end
$var reg 65 `+ got [64:0] $end
$upscope $end
$scope task check8 $end
$var reg 9 a+ expected [8:0] $end
$var reg 9 b+ got [8:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx b+
bx a+
bx `+
bx _+
bx ^+
bx ]+
bx \+
bx [+
0Z+
0Y+
0X+
1W+
0V+
1U+
0T+
0S+
0R+
1Q+
0P+
1O+
1N+
1M+
1L+
1K+
0J+
1I+
0H+
0G+
1F+
0E+
1D+
1C+
0B+
0A+
0@+
0?+
0>+
0=+
0<+
0;+
0:+
09+
08+
17+
06+
15+
04+
03+
02+
11+
00+
0/+
1.+
0-+
1,+
1++
0*+
0)+
0(+
1'+
0&+
1%+
0$+
0#+
0"+
1!+
0~*
0}*
1|*
0{*
1z*
1y*
b11001010 x*
b11001010 w*
b1100101 v*
b1100101 u*
0t*
0s*
0r*
0q*
0p*
0o*
0n*
0m*
0l*
0k*
0j*
0i*
0h*
0g*
0f*
0e*
0d*
0c*
0b*
0a*
0`*
0_*
0^*
0]*
0\*
0[*
0Z*
0Y*
0X*
0W*
0V*
0U*
0T*
0S*
0R*
0Q*
0P*
0O*
0N*
0M*
0L*
0K*
0J*
0I*
0H*
0G*
0F*
0E*
0D*
0C*
0B*
0A*
0@*
0?*
0>*
0=*
0<*
0;*
0:*
09*
08*
07*
06*
05*
04*
03*
02*
01*
00*
0/*
0.*
0-*
0,*
0+*
0**
0)*
0(*
0'*
0&*
0%*
0$*
0#*
0"*
0!*
0~)
0})
0|)
0{)
0z)
0y)
0x)
0w)
0v)
0u)
0t)
0s)
0r)
0q)
0p)
0o)
0n)
0m)
0l)
0k)
0j)
0i)
0h)
0g)
0f)
0e)
0d)
0c)
0b)
0a)
0`)
0_)
0^)
0])
0\)
0[)
0Z)
0Y)
0X)
0W)
0V)
0U)
0T)
0S)
0R)
0Q)
0P)
0O)
0N)
0M)
0L)
0K)
0J)
0I)
0H)
0G)
0F)
0E)
0D)
0C)
0B)
0A)
0@)
0?)
0>)
0=)
0<)
0;)
0:)
09)
08)
07)
06)
05)
04)
03)
02)
01)
00)
0/)
0.)
0-)
0,)
0+)
0*)
0))
0()
0')
0&)
0%)
0$)
0#)
0")
0!)
0~(
0}(
0|(
0{(
0z(
0y(
0x(
0w(
0v(
0u(
0t(
0s(
0r(
0q(
0p(
0o(
0n(
0m(
0l(
0k(
0j(
0i(
0h(
0g(
0f(
0e(
0d(
0c(
0b(
0a(
0`(
0_(
0^(
0](
0\(
0[(
0Z(
0Y(
0X(
0W(
0V(
0U(
0T(
0S(
0R(
0Q(
0P(
0O(
0N(
0M(
0L(
0K(
0J(
0I(
0H(
0G(
0F(
0E(
0D(
0C(
0B(
0A(
0@(
0?(
0>(
0=(
0<(
0;(
0:(
09(
08(
07(
06(
05(
04(
03(
02(
01(
00(
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$(
0#(
0"(
0!(
0~'
0}'
0|'
0{'
0z'
0y'
0x'
0w'
0v'
0u'
0t'
0s'
0r'
0q'
0p'
0o'
0n'
0m'
0l'
0k'
0j'
0i'
0h'
0g'
0f'
0e'
0d'
0c'
0b'
0a'
0`'
0_'
0^'
0]'
0\'
0['
0Z'
0Y'
0X'
0W'
0V'
0U'
0T'
0S'
0R'
0Q'
0P'
0O'
0N'
0M'
0L'
0K'
0J'
0I'
0H'
0G'
0F'
0E'
0D'
0C'
0B'
0A'
0@'
0?'
0>'
0='
0<'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
02'
01'
00'
0/'
0.'
0-'
0,'
0+'
0*'
0)'
0('
0''
0&'
0%'
0$'
0#'
0"'
0!'
0~&
0}&
0|&
0{&
0z&
0y&
0x&
0w&
0v&
0u&
0t&
0s&
0r&
0q&
0p&
0o&
0n&
0m&
0l&
0k&
0j&
0i&
0h&
0g&
0f&
0e&
0d&
0c&
0b&
0a&
0`&
0_&
0^&
0]&
0\&
0[&
0Z&
0Y&
0X&
0W&
0V&
0U&
0T&
0S&
0R&
0Q&
0P&
0O&
0N&
0M&
0L&
0K&
0J&
0I&
0H&
0G&
0F&
0E&
0D&
0C&
0B&
0A&
0@&
0?&
0>&
0=&
0<&
0;&
0:&
09&
08&
07&
06&
05&
04&
03&
02&
01&
00&
0/&
0.&
0-&
0,&
0+&
0*&
1)&
0(&
1'&
0&&
0%&
0$&
1#&
0"&
1!&
1~%
1}%
1|%
1{%
0z%
1y%
0x%
0w%
1v%
0u%
1t%
1s%
0r%
0q%
0p%
0o%
0n%
0m%
0l%
0k%
0j%
0i%
0h%
1g%
0f%
1e%
0d%
0c%
0b%
1a%
0`%
0_%
1^%
0]%
1\%
1[%
0Z%
0Y%
0X%
1W%
0V%
1U%
0T%
0S%
0R%
1Q%
0P%
0O%
1N%
0M%
1L%
1K%
b11001010 J%
b11001010 I%
b1100101 H%
b1100101 G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
1?#
0>#
1=#
0<#
0;#
0:#
19#
08#
17#
16#
15#
14#
13#
02#
11#
00#
0/#
1.#
0-#
1,#
1+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
1}"
0|"
1{"
0z"
0y"
0x"
1w"
0v"
0u"
1t"
0s"
1r"
1q"
0p"
0o"
0n"
1m"
0l"
1k"
0j"
0i"
0h"
1g"
0f"
0e"
1d"
0c"
1b"
1a"
b11001010 `"
b11001010 _"
b1100101 ^"
b1100101 ]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
1w
0v
1u
0t
0s
0r
1q
0p
1o
1n
1m
1l
1k
0j
1i
0h
0g
1f
0e
1d
1c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
1W
0V
1U
0T
0S
0R
1Q
0P
0O
1N
0M
1L
1K
0J
0I
0H
1G
0F
1E
0D
0C
0B
1A
0@
0?
1>
0=
1<
1;
b11001010 :
b11001010 9
b1100101 8
b1100101 7
b0 6
bx 5
bx 4
bx 3
bx 2
01
b1100101 0
b1100101 /
b1100101 .
b1100101 -
b1100101 ,
b1100101 +
b1100101 *
b1100101 )
0(
0'
0&
0%
b11001010 $
b11001010 #
b11001010 "
b11001010 !
$end
#10000
0&
0p*
0t*
0o*
0h*
0l*
0g*
0`*
0d*
0_*
0X*
0\*
0W*
0P*
0T*
0O*
0H*
0L*
0G*
0@*
0D*
0?*
08*
0<*
07*
00*
04*
0/*
0(*
0,*
0'*
0~)
0$*
0})
0v)
0z)
0u)
0n)
0r)
0m)
0f)
0j)
0e)
0^)
0b)
0])
0V)
0Z)
0U)
0N)
0R)
0M)
0F)
0J)
0E)
0>)
0B)
0=)
06)
0:)
05)
0.)
02)
0-)
0&)
0*)
0%)
0|(
0")
0{(
0t(
0x(
0s(
0l(
0p(
0k(
0d(
0h(
0c(
0\(
0`(
0[(
0T(
0X(
0S(
0L(
0P(
0K(
0D(
0H(
0C(
0<(
0@(
0;(
04(
08(
03(
0'
0,(
0B%
00(
0F%
0+(
0A%
0$(
0:%
0((
0>%
0#(
09%
0z'
02%
0~'
06%
0y'
01%
0r'
0*%
0v'
0.%
0q'
0)%
0j'
0"%
0n'
0&%
0i'
0!%
0b'
0x$
0f'
0|$
0a'
0w$
0Z'
0p$
0^'
0t$
0Y'
0o$
0R'
0h$
0V'
0l$
0Q'
0g$
0J'
0`$
0N'
0d$
0I'
0_$
0B'
0X$
0F'
0\$
0A'
0W$
0:'
0P$
0>'
0T$
09'
0O$
02'
0H$
06'
0L$
01'
0G$
0*'
0@$
0.'
0D$
0)'
0?$
0"'
08$
0&'
0<$
0!'
07$
0x&
00$
0|&
04$
0w&
0/$
0p&
0($
0t&
0,$
0o&
0'$
0(
0h&
0~#
0X"
0l&
0$$
0\"
0g&
0}#
0W"
0`&
0v#
0P"
0d&
0z#
0T"
0_&
0u#
0O"
0X&
0n#
0H"
0\&
0r#
0L"
0W&
0m#
0G"
0P&
0f#
0@"
0T&
0j#
0D"
0O&
0e#
0?"
0H&
0^#
08"
0L&
0b#
0<"
0G&
0]#
07"
0@&
0V#
00"
0D&
0Z#
04"
0?&
0U#
0/"
08&
0N#
0("
0z%
0<&
02#
0R#
0j
0,"
0J+
0u%
07&
0-#
0M#
0e
0'"
0E+
0n%
00&
0&#
0F#
0^
0~
0>+
0b%
0r%
04&
0x"
0*#
0J#
0R
0b
0$"
02+
0B+
0]%
0m%
0/&
0s"
0%#
0E#
0M
0]
0}
0-+
0=+
0%
0U%
0e%
0}%
0'&
0V%
0f%
0(&
0k"
0{"
05#
0=#
0l"
0|"
0>#
0E
0U
0m
0u
0F
0V
0v
0%+
05+
0M+
0U+
0&+
06+
0V+
1O%
0N%
1_%
0^%
1w%
0v%
1!&
0$&
b0 I%
0~%
1W%
0Z%
1g%
0j%
1o%
1)&
0,&
11&
19&
1A&
1I&
1Q&
1Y&
1a&
1i&
1q&
1y&
1#'
1+'
13'
1;'
1C'
1K'
1S'
1['
1c'
1k'
1s'
1{'
1%(
1-(
15(
1=(
1E(
1M(
1U(
1](
1e(
1m(
1u(
1}(
1')
1/)
17)
1?)
1G)
1O)
1W)
1_)
1g)
1o)
1w)
1!*
1)*
11*
19*
1A*
1I*
1Q*
1Y*
1a*
1i*
b1111111111111111111111111111111111111111111111111111111111111111 "
b1111111111111111111111111111111111111111111111111111111111111111 J%
1q*
1e"
0d"
1u"
0t"
1/#
0.#
17#
0:#
b0 _"
06#
1m"
0p"
1}"
0"#
1'#
1?#
0B#
1G#
1O#
1W#
1_#
1g#
1o#
1w#
1!$
1)$
11$
19$
1A$
1I$
1Q$
1Y$
1a$
1i$
1q$
1y$
1#%
1+%
13%
1;%
b11111111111111111111111111111111 #
b11111111111111111111111111111111 `"
1C%
1?
0>
1O
0N
1g
0f
1o
0r
b0 9
0n
1G
0J
1W
0Z
1_
1w
0z
1!"
1)"
11"
19"
1A"
1I"
1Q"
b1111111111111111 $
b1111111111111111 :
1Y"
1}*
0|*
1/+
0.+
1G+
0F+
1O+
0R+
b0 w*
0N+
1'+
0*+
17+
0:+
1?+
b11111111 !
b11111111 x*
1W+
0Z+
1P%
0Q%
1`%
0a%
1x%
0y%
1"&
0#&
1X%
1h%
1p%
1*&
12&
1:&
1B&
1J&
1R&
1Z&
1b&
1j&
1r&
1z&
1$'
1,'
14'
1<'
1D'
1L'
1T'
1\'
1d'
1l'
1t'
1|'
1&(
1.(
16(
1>(
1F(
1N(
1V(
1^(
1f(
1n(
1v(
1~(
1()
10)
18)
1@)
1H)
1P)
1X)
1`)
1h)
1p)
1x)
1"*
1**
12*
1:*
1B*
1J*
1R*
1Z*
1b*
1j*
1r*
1f"
0g"
1v"
0w"
10#
01#
18#
09#
1n"
1~"
1(#
1@#
1H#
1P#
1X#
1`#
1h#
1p#
1x#
1"$
1*$
12$
1:$
1B$
1J$
1R$
1Z$
1b$
1j$
1r$
1z$
1$%
1,%
14%
1<%
1D%
1@
0A
1P
0Q
1h
0i
1p
0q
1H
1X
1`
1x
1""
1*"
12"
1:"
1B"
1J"
1R"
1Z"
1~*
0!+
10+
01+
1H+
0I+
1P+
0Q+
1(+
18+
1@+
1X+
0L%
0\%
0t%
0|%
1S%
1c%
1k%
1%&
1-&
15&
1=&
1E&
1M&
1U&
1]&
1e&
1m&
1u&
1}&
1''
1/'
17'
1?'
1G'
1O'
1W'
1_'
1g'
1o'
1w'
1!(
1)(
11(
19(
1A(
1I(
1Q(
1Y(
1a(
1i(
1q(
1y(
1#)
1+)
13)
1;)
1C)
1K)
1S)
1[)
1c)
1k)
1s)
1{)
1%*
1-*
15*
1=*
1E*
1M*
1U*
1]*
1e*
1m*
0b"
0r"
0,#
04#
1i"
1y"
1##
1;#
1C#
1K#
1S#
1[#
1c#
1k#
1s#
1{#
1%$
1-$
15$
1=$
1E$
1M$
1U$
1]$
1e$
1m$
1u$
1}$
1'%
1/%
17%
1?%
0<
0L
0d
0l
1C
1S
1[
1s
1{
1%"
1-"
15"
1="
1E"
1M"
1U"
0z*
0,+
0D+
0L+
1#+
13+
1;+
1S+
b0 /
b0 H%
b1111111111111111111111111111111111111111111111111111111111111111 +
b1111111111111111111111111111111111111111111111111111111111111111 G%
b0 .
b0 ^"
b11111111111111111111111111111111 *
b11111111111111111111111111111111 ]"
b0 -
b0 8
b1111111111111111 )
b1111111111111111 7
b0 0
b0 v*
b11111111 ,
b11111111 u*
b1 6
b11001010 _+
b11001010 `+
b11001010 ]+
b11001010 ^+
b11001010 [+
b11001010 \+
b11001010 a+
b11001010 b+
b11001010 4
b11001010 3
b11001010 2
b11001010 5
#20000
1/&
1E#
1}
1%
1(&
1>#
1v
1V+
0)&
1,&
0?#
1B#
0w
1z
0W+
1Z+
1'&
1=#
1u
1U+
1~%
16#
1n
1N+
0!&
1$&
07#
1:#
0o
1r
0O+
1R+
1}%
15#
1m
1M+
1v%
1.#
1f
1F+
0w%
1z%
0/#
12#
0g
1j
0G+
1J+
1u%
1-#
1e
1E+
1n%
1&#
1^
1>+
0o%
1r%
0'#
1*#
0_
1b
0?+
1B+
1m%
1%#
1]
1=+
1f%
1|"
1V
16+
0g%
1j%
0}"
1"#
0W
1Z
07+
1:+
1e%
1{"
1U
15+
1^%
1t"
1N
1.+
0_%
1b%
0u"
1x"
0O
1R
0/+
12+
1]%
1s"
1M
1-+
1V%
1l"
1F
1&+
0W%
1Z%
0m"
1p"
0G
1J
0'+
1*+
1U%
1k"
1E
1%+
0O%
b111111110 I%
1N%
11&
09&
0A&
0I&
0Q&
0Y&
0a&
0i&
0q&
0y&
0#'
0+'
03'
0;'
0C'
0K'
0S'
0['
0c'
0k'
0s'
0{'
0%(
0-(
05(
0=(
0E(
0M(
0U(
0](
0e(
0m(
0u(
0}(
0')
0/)
07)
0?)
0G)
0O)
0W)
0_)
0g)
0o)
0w)
0!*
0)*
01*
09*
0A*
0I*
0Q*
0Y*
0a*
0i*
b100000000 "
b100000000 J%
0q*
0e"
b111111110 _"
1d"
1G#
0O#
0W#
0_#
0g#
0o#
0w#
0!$
0)$
01$
09$
0A$
0I$
0Q$
0Y$
0a$
0i$
0q$
0y$
0#%
0+%
03%
0;%
b100000000 #
b100000000 `"
0C%
0?
b111111110 9
1>
1!"
0)"
01"
09"
0A"
0I"
0Q"
b100000000 $
b100000000 :
0Y"
b0 !
b0 x*
0}*
b111111110 w*
1|*
0P%
1Q%
02&
0:&
0B&
0J&
0R&
0Z&
0b&
0j&
0r&
0z&
0$'
0,'
04'
0<'
0D'
0L'
0T'
0\'
0d'
0l'
0t'
0|'
0&(
0.(
06(
0>(
0F(
0N(
0V(
0^(
0f(
0n(
0v(
0~(
0()
00)
08)
0@)
0H)
0P)
0X)
0`)
0h)
0p)
0x)
0"*
0**
02*
0:*
0B*
0J*
0R*
0Z*
0b*
0j*
0r*
0f"
1g"
0H#
0P#
0X#
0`#
0h#
0p#
0x#
0"$
0*$
02$
0:$
0B$
0J$
0R$
0Z$
0b$
0j$
0r$
0z$
0$%
0,%
04%
0<%
0D%
0@
1A
0""
0*"
02"
0:"
0B"
0J"
0R"
0Z"
0~*
1!+
1L%
0-&
05&
0=&
0E&
0M&
0U&
0]&
0e&
0m&
0u&
0}&
0''
0/'
07'
0?'
0G'
0O'
0W'
0_'
0g'
0o'
0w'
0!(
0)(
01(
09(
0A(
0I(
0Q(
0Y(
0a(
0i(
0q(
0y(
0#)
0+)
03)
0;)
0C)
0K)
0S)
0[)
0c)
0k)
0s)
0{)
0%*
0-*
05*
0=*
0E*
0M*
0U*
0]*
0e*
0m*
1b"
0C#
0K#
0S#
0[#
0c#
0k#
0s#
0{#
0%$
0-$
05$
0=$
0E$
0M$
0U$
0]$
0e$
0m$
0u$
0}$
0'%
0/%
07%
0?%
1<
0{
0%"
0-"
05"
0="
0E"
0M"
0U"
1z*
b1 /
b1 H%
b11111111 +
b11111111 G%
b1 .
b1 ^"
b11111111 *
b11111111 ]"
b1 -
b1 8
b11111111 )
b11111111 7
b1 0
b1 v*
b10 6
b1111111111111111111111111111111111111111111111111111111111111111 _+
b1111111111111111111111111111111111111111111111111111111111111111 `+
b11111111111111111111111111111111 ]+
b11111111111111111111111111111111 ^+
b1111111111111111 [+
b1111111111111111 \+
b11111111 a+
b11111111 b+
b1111111111111111111111111111111111111111111111111111111111111111 4
b11111111111111111111111111111111 3
b1111111111111111 2
b11111111 5
#30000
01&
0G#
0!"
0/&
0E#
0}
0%
0(&
0>#
0v
0V+
1)&
0,&
1?#
0B#
1w
0z
1W+
0Z+
0'&
0=#
0u
0U+
0~%
06#
0n
0N+
1!&
0$&
17#
0:#
1o
0r
1O+
0R+
0}%
05#
0m
0M+
0v%
0.#
0f
0F+
1w%
0z%
1/#
02#
1g
0j
1G+
0J+
0u%
0-#
0e
0E+
0n%
0&#
0^
0>+
1o%
0r%
1'#
0*#
1_
0b
1?+
0B+
0m%
0%#
0]
0=+
0f%
0|"
0V
06+
1g%
0j%
1}"
0"#
1W
0Z
17+
0:+
0e%
0{"
0U
05+
0^%
0t"
0N
0.+
1_%
0b%
1u"
0x"
1O
0R
1/+
02+
0]%
0s"
0M
0-+
0V%
0l"
0F
0&+
1W%
0Z%
1m"
0p"
1G
0J
1'+
0*+
0U%
0k"
0E
0%+
b11111111 "
b11111111 J%
1O%
b0 I%
0N%
b11111111 #
b11111111 `"
1e"
b0 _"
0d"
b11111111 $
b11111111 :
1?
b0 9
0>
b11111111 !
b11111111 x*
1}*
b0 w*
0|*
1P%
0Q%
1f"
0g"
1@
0A
1~*
0!+
1\%
1l%
1|%
0K%
0[%
0k%
0{%
1r"
1$#
14#
0a"
0q"
0##
03#
1L
1\
1l
0;
0K
0[
0k
1,+
1<+
1L+
0y*
0++
0;+
0K+
b1010101 /
b1010101 H%
b10101010 +
b10101010 G%
b1010101 .
b1010101 ^"
b10101010 *
b10101010 ]"
b1010101 -
b1010101 8
b10101010 )
b10101010 7
b1010101 0
b1010101 v*
b10101010 ,
b10101010 u*
b11 6
b100000000 _+
b100000000 `+
b100000000 ]+
b100000000 ^+
b100000000 [+
b100000000 \+
b100000000 a+
b100000000 b+
b100000000 4
b100000000 3
b100000000 2
b100000000 5
#40000
1'&
1=#
1u
1U+
1~%
16#
1n
1N+
0!&
1$&
07#
1:#
0o
1r
0O+
1R+
1}%
15#
1m
1M+
1v%
1.#
1f
1F+
0w%
1z%
0/#
12#
0g
1j
0G+
1J+
1u%
1-#
1e
1E+
1n%
1&#
1^
1>+
0o%
1r%
0'#
1*#
0_
1b
0?+
1B+
1m%
1%#
1]
1=+
1f%
1|"
1V
16+
0g%
1j%
0}"
1"#
0W
1Z
07+
1:+
1e%
1{"
1U
15+
1^%
1t"
1N
1.+
0_%
1b%
0u"
1x"
0O
1R
0/+
12+
1]%
1s"
1M
1-+
1V%
1l"
1F
1&+
0W%
1Z%
0m"
1p"
0G
1J
0'+
1*+
1U%
1k"
1E
1%+
1N%
b10000001 "
b10000001 J%
1)&
1d"
b10000001 #
b10000001 `"
1?#
1>
b10000001 $
b10000001 :
1w
1|*
b10000001 !
b10000001 x*
1W+
0P%
1Q%
0*&
0f"
1g"
0@#
0@
1A
0x
0~*
1!+
0X+
1=
1c"
1M%
1{*
0\%
0l%
0|%
1K%
1[%
1k%
1{%
0%&
0r"
0$#
04#
1a"
1q"
1##
13#
0;#
0L
0\
0l
1;
1K
1[
1k
0s
0,+
0<+
0L+
1y*
1++
1;+
1K+
0S+
b11111111 9
b11111111 _"
b11111111 I%
b11111111 w*
11
b1 /
b1 H%
b1111111 +
b1111111 G%
b1 .
b1 ^"
b1111111 *
b1111111 ]"
b1 -
b1 8
b1111111 )
b1111111 7
b1 0
b1 v*
b1111111 ,
b1111111 u*
b100 6
b11111111 _+
b11111111 `+
b11111111 ]+
b11111111 ^+
b11111111 [+
b11111111 \+
b11111111 a+
b11111111 b+
b11111111 4
b11111111 3
b11111111 2
b11111111 5
#50000
0q&
0)$
0o&
0'$
0(
0h&
0~#
0X"
0l&
0$$
0\"
0g&
0}#
0W"
0`&
0v#
0P"
0d&
0z#
0T"
0_&
0u#
0O"
0'&
0X&
0=#
0n#
0u
0H"
0U+
0~%
0\&
06#
0r#
0n
0L"
0N+
1!&
0$&
0W&
17#
0:#
0m#
1o
0r
0G"
1O+
0R+
0}%
0P&
05#
0f#
0m
0@"
0M+
0v%
0T&
0.#
0j#
0f
0D"
0F+
1w%
0z%
0O&
1/#
02#
0e#
1g
0j
0?"
1G+
0J+
0u%
0H&
0-#
0^#
0e
08"
0E+
0n%
0L&
0&#
0b#
0^
0<"
0>+
1o%
0r%
0G&
1'#
0*#
0]#
1_
0b
07"
1?+
0B+
0m%
0@&
0%#
0V#
0]
00"
0=+
0f%
0D&
0|"
0Z#
0V
04"
06+
1g%
0j%
0?&
1}"
0"#
0U#
1W
0Z
0/"
17+
0:+
0e%
08&
0{"
0N#
0U
0("
05+
0^%
0<&
0t"
0R#
0N
0,"
0.+
1_%
0b%
07&
1u"
0x"
0M#
1O
0R
0'"
1/+
02+
0]%
00&
0s"
0F#
0M
0~
0-+
0V%
04&
0l"
0J#
0F
0$"
0&+
1W%
0Z%
0/&
1m"
0p"
0E#
1G
0J
0}
1'+
0*+
0%
0U%
0(&
0k"
0>#
0E
0v
0%+
0V+
0N%
19&
1I&
1Q&
1a&
1)&
0,&
11&
1A&
1Y&
b1111111111111111 "
b1111111111111111 J%
1i&
0d"
1O#
1_#
1g#
1w#
1?#
0B#
1G#
1W#
1o#
b1111111111111111 #
b1111111111111111 `"
1!$
0>
1)"
19"
1A"
1Q"
1w
0z
1!"
11"
1I"
b1111111111111111 $
b1111111111111111 :
1Y"
0|*
b11111111 !
b11111111 x*
1W+
0Z+
1P%
0Q%
1:&
1J&
1R&
1b&
1*&
12&
1B&
1Z&
1j&
1f"
0g"
1P#
1`#
1h#
1x#
1@#
1H#
1X#
1p#
1"$
1@
0A
1*"
1:"
1B"
1R"
1x
1""
12"
1J"
1Z"
1~*
0!+
1X+
0=
0c"
0M%
0{*
0L%
1T%
1d%
1l%
1|%
16&
1F&
1N&
1^&
0S%
0c%
0k%
0{%
1%&
1-&
1=&
1U&
1e&
0b"
1j"
1z"
1$#
14#
1L#
1\#
1d#
1t#
0i"
0y"
0##
03#
1;#
1C#
1S#
1k#
1{#
0<
1D
1T
1\
1l
1&"
16"
1>"
1N"
0C
0S
0[
0k
1s
1{
1-"
1E"
1U"
0z*
1$+
14+
1<+
1L+
0#+
03+
0;+
0K+
1S+
b0 9
b0 _"
b0 I%
b0 w*
01
b101101001011010 /
b101101001011010 H%
b1010010110100101 +
b1010010110100101 G%
b101101001011010 .
b101101001011010 ^"
b1010010110100101 *
b1010010110100101 ]"
b101101001011010 -
b101101001011010 8
b1010010110100101 )
b1010010110100101 7
b1011010 0
b1011010 v*
b10100101 ,
b10100101 u*
b101 6
b10000001 _+
b10000001 `+
b10000001 ]+
b10000001 ^+
b10000001 [+
b10000001 \+
b10000001 a+
b10000001 b+
b10000001 4
b10000001 3
b10000001 2
b10000001 5
#60000
0W%
0g%
0!&
09&
0I&
0Q&
0a&
0O%
0_%
0)&
01&
0A&
0Y&
b110000 "
b110000 J%
0i&
0m"
0}"
07#
0O#
0_#
0g#
0w#
0e"
0u"
0?#
0G#
0W#
0o#
b110000 #
b110000 `"
0!$
0G
0W
0o
0)"
09"
0A"
0Q"
0?
0O
0w
0!"
01"
0I"
b110000 $
b110000 :
0Y"
0'+
07+
0O+
0}*
0/+
b110000 !
b110000 x*
0W+
0X%
0h%
0"&
0:&
0J&
0R&
0b&
0P%
0`%
0*&
02&
0B&
0Z&
0j&
0n"
0~"
08#
0P#
0`#
0h#
0x#
0f"
0v"
0@#
0H#
0X#
0p#
0"$
0H
0X
0p
0*"
0:"
0B"
0R"
0@
0P
0x
0""
02"
0J"
0Z"
0(+
08+
0P+
0~*
00+
0X+
0T%
0d%
0l%
1t%
0|%
06&
0F&
0N&
0^&
0K%
0[%
1k%
0s%
0%&
0-&
0=&
0U&
0e&
0j"
0z"
0$#
1,#
04#
0L#
0\#
0d#
0t#
0a"
0q"
1##
0+#
0;#
0C#
0S#
0k#
0{#
0D
0T
0\
1d
0l
0&"
06"
0>"
0N"
0;
0K
1[
0c
0s
0{
0-"
0E"
0U"
0$+
04+
0<+
1D+
0L+
0y*
0++
1;+
0C+
0S+
b100000 /
b100000 H%
b10000 +
b10000 G%
b100000 .
b100000 ^"
b10000 *
b10000 ]"
b100000 -
b100000 8
b10000 )
b10000 7
b100000 0
b100000 v*
b10000 ,
b10000 u*
b110 6
b1111111111111111 _+
b1111111111111111 `+
b1111111111111111 ]+
b1111111111111111 ^+
b1111111111111111 [+
b1111111111111111 \+
b11111111 a+
b11111111 b+
b1111111111111111 4
b1111111111111111 3
b1111111111111111 2
b11111111 5
#70000
1!"
1G#
11&
1}
1E#
1/&
1%
1v
1>#
1(&
1V+
1z
1B#
1,&
1Z+
1u
1=#
1'&
1U+
1n
16#
1~%
1N+
1r
1:#
1$&
1R+
1m
15#
1}%
1M+
1f
1.#
1v%
1F+
0g
1j
0/#
12#
0w%
1z%
0G+
1J+
1e
1-#
1u%
1E+
1^
1&#
1n%
1>+
0_
1b
0'#
1*#
0o%
1r%
0?+
1B+
1]
1%#
1m%
1=+
1V
1|"
1f%
16+
1Z
1"#
1j%
1:+
1U
1{"
1e%
15+
1N
1t"
1^%
1.+
1R
1x"
1b%
12+
1M
1s"
1]%
1-+
1F
1l"
1V%
1&+
1J
1p"
1Z%
1*+
1E
1k"
1U%
1%+
1>
1d"
1N%
1|*
0W%
0_%
0g%
0!&
b100000000 "
b100000000 J%
0)&
0m"
0u"
0}"
07#
b100000000 #
b100000000 `"
0?#
0G
0O
0W
0o
b100000000 $
b100000000 :
0w
0'+
0/+
07+
0O+
b0 !
b0 x*
0W+
1B
1h"
1R%
1"+
1P%
1X%
1`%
1h%
1"&
1*&
1f"
1n"
1v"
1~"
18#
1@#
1@
1H
1P
1X
1p
1x
1~*
1(+
10+
18+
1P+
1X+
1=
1c"
1M%
1{*
1L%
0t%
1S%
1[%
1c%
1s%
1{%
1%&
1b"
0,#
1i"
1q"
1y"
1+#
13#
1;#
1<
0d
1C
1K
1S
1c
1k
1s
1z*
0D+
1#+
1++
13+
1C+
1K+
1S+
b111111111 9
b111111111 _"
b111111111 I%
b111111111 w*
11
b1 /
b1 H%
b11111110 +
b11111110 G%
b1 .
b1 ^"
b11111110 *
b11111110 ]"
b1 -
b1 8
b11111110 )
b11111110 7
b1 0
b1 v*
b11111110 ,
b11111110 u*
b111 6
b110000 _+
b110000 `+
b110000 ]+
b110000 ^+
b110000 [+
b110000 \+
b110000 a+
b110000 b+
b110000 4
b110000 3
b110000 2
b110000 5
#80000
b1000 6
b100000000 _+
b100000000 `+
b100000000 ]+
b100000000 ^+
b100000000 [+
b100000000 \+
b100000000 a+
b100000000 b+
b100000000 4
b100000000 3
b100000000 2
b100000000 5
