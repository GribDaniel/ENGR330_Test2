$date
	Wed Oct 29 10:35:56 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_adder $end
$var wire 64 ! sum [63:0] $end
$var wire 1 " cout $end
$var reg 64 # a [63:0] $end
$var reg 64 $ b [63:0] $end
$var reg 1 % cin $end
$scope module dut $end
$var wire 64 & A [63:0] $end
$var wire 64 ' B [63:0] $end
$var wire 1 % Cin $end
$var wire 65 ( carry [64:0] $end
$var wire 64 ) Sum [63:0] $end
$var wire 1 " Cout $end
$scope begin adderStage[0] $end
$scope module fA $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 , cin $end
$var wire 1 - cout $end
$var wire 1 . sum $end
$var wire 1 / w1 $end
$var wire 1 0 w2 $end
$var wire 1 1 w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[1] $end
$scope module fA $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 cin $end
$var wire 1 5 cout $end
$var wire 1 6 sum $end
$var wire 1 7 w1 $end
$var wire 1 8 w2 $end
$var wire 1 9 w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[2] $end
$scope module fA $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < cin $end
$var wire 1 = cout $end
$var wire 1 > sum $end
$var wire 1 ? w1 $end
$var wire 1 @ w2 $end
$var wire 1 A w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[3] $end
$scope module fA $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 D cin $end
$var wire 1 E cout $end
$var wire 1 F sum $end
$var wire 1 G w1 $end
$var wire 1 H w2 $end
$var wire 1 I w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[4] $end
$scope module fA $end
$var wire 1 J a $end
$var wire 1 K b $end
$var wire 1 L cin $end
$var wire 1 M cout $end
$var wire 1 N sum $end
$var wire 1 O w1 $end
$var wire 1 P w2 $end
$var wire 1 Q w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[5] $end
$scope module fA $end
$var wire 1 R a $end
$var wire 1 S b $end
$var wire 1 T cin $end
$var wire 1 U cout $end
$var wire 1 V sum $end
$var wire 1 W w1 $end
$var wire 1 X w2 $end
$var wire 1 Y w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[6] $end
$scope module fA $end
$var wire 1 Z a $end
$var wire 1 [ b $end
$var wire 1 \ cin $end
$var wire 1 ] cout $end
$var wire 1 ^ sum $end
$var wire 1 _ w1 $end
$var wire 1 ` w2 $end
$var wire 1 a w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[7] $end
$scope module fA $end
$var wire 1 b a $end
$var wire 1 c b $end
$var wire 1 d cin $end
$var wire 1 e cout $end
$var wire 1 f sum $end
$var wire 1 g w1 $end
$var wire 1 h w2 $end
$var wire 1 i w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[8] $end
$scope module fA $end
$var wire 1 j a $end
$var wire 1 k b $end
$var wire 1 l cin $end
$var wire 1 m cout $end
$var wire 1 n sum $end
$var wire 1 o w1 $end
$var wire 1 p w2 $end
$var wire 1 q w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[9] $end
$scope module fA $end
$var wire 1 r a $end
$var wire 1 s b $end
$var wire 1 t cin $end
$var wire 1 u cout $end
$var wire 1 v sum $end
$var wire 1 w w1 $end
$var wire 1 x w2 $end
$var wire 1 y w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[10] $end
$scope module fA $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 | cin $end
$var wire 1 } cout $end
$var wire 1 ~ sum $end
$var wire 1 !" w1 $end
$var wire 1 "" w2 $end
$var wire 1 #" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[11] $end
$scope module fA $end
$var wire 1 $" a $end
$var wire 1 %" b $end
$var wire 1 &" cin $end
$var wire 1 '" cout $end
$var wire 1 (" sum $end
$var wire 1 )" w1 $end
$var wire 1 *" w2 $end
$var wire 1 +" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[12] $end
$scope module fA $end
$var wire 1 ," a $end
$var wire 1 -" b $end
$var wire 1 ." cin $end
$var wire 1 /" cout $end
$var wire 1 0" sum $end
$var wire 1 1" w1 $end
$var wire 1 2" w2 $end
$var wire 1 3" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[13] $end
$scope module fA $end
$var wire 1 4" a $end
$var wire 1 5" b $end
$var wire 1 6" cin $end
$var wire 1 7" cout $end
$var wire 1 8" sum $end
$var wire 1 9" w1 $end
$var wire 1 :" w2 $end
$var wire 1 ;" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[14] $end
$scope module fA $end
$var wire 1 <" a $end
$var wire 1 =" b $end
$var wire 1 >" cin $end
$var wire 1 ?" cout $end
$var wire 1 @" sum $end
$var wire 1 A" w1 $end
$var wire 1 B" w2 $end
$var wire 1 C" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[15] $end
$scope module fA $end
$var wire 1 D" a $end
$var wire 1 E" b $end
$var wire 1 F" cin $end
$var wire 1 G" cout $end
$var wire 1 H" sum $end
$var wire 1 I" w1 $end
$var wire 1 J" w2 $end
$var wire 1 K" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[16] $end
$scope module fA $end
$var wire 1 L" a $end
$var wire 1 M" b $end
$var wire 1 N" cin $end
$var wire 1 O" cout $end
$var wire 1 P" sum $end
$var wire 1 Q" w1 $end
$var wire 1 R" w2 $end
$var wire 1 S" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[17] $end
$scope module fA $end
$var wire 1 T" a $end
$var wire 1 U" b $end
$var wire 1 V" cin $end
$var wire 1 W" cout $end
$var wire 1 X" sum $end
$var wire 1 Y" w1 $end
$var wire 1 Z" w2 $end
$var wire 1 [" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[18] $end
$scope module fA $end
$var wire 1 \" a $end
$var wire 1 ]" b $end
$var wire 1 ^" cin $end
$var wire 1 _" cout $end
$var wire 1 `" sum $end
$var wire 1 a" w1 $end
$var wire 1 b" w2 $end
$var wire 1 c" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[19] $end
$scope module fA $end
$var wire 1 d" a $end
$var wire 1 e" b $end
$var wire 1 f" cin $end
$var wire 1 g" cout $end
$var wire 1 h" sum $end
$var wire 1 i" w1 $end
$var wire 1 j" w2 $end
$var wire 1 k" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[20] $end
$scope module fA $end
$var wire 1 l" a $end
$var wire 1 m" b $end
$var wire 1 n" cin $end
$var wire 1 o" cout $end
$var wire 1 p" sum $end
$var wire 1 q" w1 $end
$var wire 1 r" w2 $end
$var wire 1 s" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[21] $end
$scope module fA $end
$var wire 1 t" a $end
$var wire 1 u" b $end
$var wire 1 v" cin $end
$var wire 1 w" cout $end
$var wire 1 x" sum $end
$var wire 1 y" w1 $end
$var wire 1 z" w2 $end
$var wire 1 {" w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[22] $end
$scope module fA $end
$var wire 1 |" a $end
$var wire 1 }" b $end
$var wire 1 ~" cin $end
$var wire 1 !# cout $end
$var wire 1 "# sum $end
$var wire 1 ## w1 $end
$var wire 1 $# w2 $end
$var wire 1 %# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[23] $end
$scope module fA $end
$var wire 1 &# a $end
$var wire 1 '# b $end
$var wire 1 (# cin $end
$var wire 1 )# cout $end
$var wire 1 *# sum $end
$var wire 1 +# w1 $end
$var wire 1 ,# w2 $end
$var wire 1 -# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[24] $end
$scope module fA $end
$var wire 1 .# a $end
$var wire 1 /# b $end
$var wire 1 0# cin $end
$var wire 1 1# cout $end
$var wire 1 2# sum $end
$var wire 1 3# w1 $end
$var wire 1 4# w2 $end
$var wire 1 5# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[25] $end
$scope module fA $end
$var wire 1 6# a $end
$var wire 1 7# b $end
$var wire 1 8# cin $end
$var wire 1 9# cout $end
$var wire 1 :# sum $end
$var wire 1 ;# w1 $end
$var wire 1 <# w2 $end
$var wire 1 =# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[26] $end
$scope module fA $end
$var wire 1 ># a $end
$var wire 1 ?# b $end
$var wire 1 @# cin $end
$var wire 1 A# cout $end
$var wire 1 B# sum $end
$var wire 1 C# w1 $end
$var wire 1 D# w2 $end
$var wire 1 E# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[27] $end
$scope module fA $end
$var wire 1 F# a $end
$var wire 1 G# b $end
$var wire 1 H# cin $end
$var wire 1 I# cout $end
$var wire 1 J# sum $end
$var wire 1 K# w1 $end
$var wire 1 L# w2 $end
$var wire 1 M# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[28] $end
$scope module fA $end
$var wire 1 N# a $end
$var wire 1 O# b $end
$var wire 1 P# cin $end
$var wire 1 Q# cout $end
$var wire 1 R# sum $end
$var wire 1 S# w1 $end
$var wire 1 T# w2 $end
$var wire 1 U# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[29] $end
$scope module fA $end
$var wire 1 V# a $end
$var wire 1 W# b $end
$var wire 1 X# cin $end
$var wire 1 Y# cout $end
$var wire 1 Z# sum $end
$var wire 1 [# w1 $end
$var wire 1 \# w2 $end
$var wire 1 ]# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[30] $end
$scope module fA $end
$var wire 1 ^# a $end
$var wire 1 _# b $end
$var wire 1 `# cin $end
$var wire 1 a# cout $end
$var wire 1 b# sum $end
$var wire 1 c# w1 $end
$var wire 1 d# w2 $end
$var wire 1 e# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[31] $end
$scope module fA $end
$var wire 1 f# a $end
$var wire 1 g# b $end
$var wire 1 h# cin $end
$var wire 1 i# cout $end
$var wire 1 j# sum $end
$var wire 1 k# w1 $end
$var wire 1 l# w2 $end
$var wire 1 m# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[32] $end
$scope module fA $end
$var wire 1 n# a $end
$var wire 1 o# b $end
$var wire 1 p# cin $end
$var wire 1 q# cout $end
$var wire 1 r# sum $end
$var wire 1 s# w1 $end
$var wire 1 t# w2 $end
$var wire 1 u# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[33] $end
$scope module fA $end
$var wire 1 v# a $end
$var wire 1 w# b $end
$var wire 1 x# cin $end
$var wire 1 y# cout $end
$var wire 1 z# sum $end
$var wire 1 {# w1 $end
$var wire 1 |# w2 $end
$var wire 1 }# w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[34] $end
$scope module fA $end
$var wire 1 ~# a $end
$var wire 1 !$ b $end
$var wire 1 "$ cin $end
$var wire 1 #$ cout $end
$var wire 1 $$ sum $end
$var wire 1 %$ w1 $end
$var wire 1 &$ w2 $end
$var wire 1 '$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[35] $end
$scope module fA $end
$var wire 1 ($ a $end
$var wire 1 )$ b $end
$var wire 1 *$ cin $end
$var wire 1 +$ cout $end
$var wire 1 ,$ sum $end
$var wire 1 -$ w1 $end
$var wire 1 .$ w2 $end
$var wire 1 /$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[36] $end
$scope module fA $end
$var wire 1 0$ a $end
$var wire 1 1$ b $end
$var wire 1 2$ cin $end
$var wire 1 3$ cout $end
$var wire 1 4$ sum $end
$var wire 1 5$ w1 $end
$var wire 1 6$ w2 $end
$var wire 1 7$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[37] $end
$scope module fA $end
$var wire 1 8$ a $end
$var wire 1 9$ b $end
$var wire 1 :$ cin $end
$var wire 1 ;$ cout $end
$var wire 1 <$ sum $end
$var wire 1 =$ w1 $end
$var wire 1 >$ w2 $end
$var wire 1 ?$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[38] $end
$scope module fA $end
$var wire 1 @$ a $end
$var wire 1 A$ b $end
$var wire 1 B$ cin $end
$var wire 1 C$ cout $end
$var wire 1 D$ sum $end
$var wire 1 E$ w1 $end
$var wire 1 F$ w2 $end
$var wire 1 G$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[39] $end
$scope module fA $end
$var wire 1 H$ a $end
$var wire 1 I$ b $end
$var wire 1 J$ cin $end
$var wire 1 K$ cout $end
$var wire 1 L$ sum $end
$var wire 1 M$ w1 $end
$var wire 1 N$ w2 $end
$var wire 1 O$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[40] $end
$scope module fA $end
$var wire 1 P$ a $end
$var wire 1 Q$ b $end
$var wire 1 R$ cin $end
$var wire 1 S$ cout $end
$var wire 1 T$ sum $end
$var wire 1 U$ w1 $end
$var wire 1 V$ w2 $end
$var wire 1 W$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[41] $end
$scope module fA $end
$var wire 1 X$ a $end
$var wire 1 Y$ b $end
$var wire 1 Z$ cin $end
$var wire 1 [$ cout $end
$var wire 1 \$ sum $end
$var wire 1 ]$ w1 $end
$var wire 1 ^$ w2 $end
$var wire 1 _$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[42] $end
$scope module fA $end
$var wire 1 `$ a $end
$var wire 1 a$ b $end
$var wire 1 b$ cin $end
$var wire 1 c$ cout $end
$var wire 1 d$ sum $end
$var wire 1 e$ w1 $end
$var wire 1 f$ w2 $end
$var wire 1 g$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[43] $end
$scope module fA $end
$var wire 1 h$ a $end
$var wire 1 i$ b $end
$var wire 1 j$ cin $end
$var wire 1 k$ cout $end
$var wire 1 l$ sum $end
$var wire 1 m$ w1 $end
$var wire 1 n$ w2 $end
$var wire 1 o$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[44] $end
$scope module fA $end
$var wire 1 p$ a $end
$var wire 1 q$ b $end
$var wire 1 r$ cin $end
$var wire 1 s$ cout $end
$var wire 1 t$ sum $end
$var wire 1 u$ w1 $end
$var wire 1 v$ w2 $end
$var wire 1 w$ w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[45] $end
$scope module fA $end
$var wire 1 x$ a $end
$var wire 1 y$ b $end
$var wire 1 z$ cin $end
$var wire 1 {$ cout $end
$var wire 1 |$ sum $end
$var wire 1 }$ w1 $end
$var wire 1 ~$ w2 $end
$var wire 1 !% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[46] $end
$scope module fA $end
$var wire 1 "% a $end
$var wire 1 #% b $end
$var wire 1 $% cin $end
$var wire 1 %% cout $end
$var wire 1 &% sum $end
$var wire 1 '% w1 $end
$var wire 1 (% w2 $end
$var wire 1 )% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[47] $end
$scope module fA $end
$var wire 1 *% a $end
$var wire 1 +% b $end
$var wire 1 ,% cin $end
$var wire 1 -% cout $end
$var wire 1 .% sum $end
$var wire 1 /% w1 $end
$var wire 1 0% w2 $end
$var wire 1 1% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[48] $end
$scope module fA $end
$var wire 1 2% a $end
$var wire 1 3% b $end
$var wire 1 4% cin $end
$var wire 1 5% cout $end
$var wire 1 6% sum $end
$var wire 1 7% w1 $end
$var wire 1 8% w2 $end
$var wire 1 9% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[49] $end
$scope module fA $end
$var wire 1 :% a $end
$var wire 1 ;% b $end
$var wire 1 <% cin $end
$var wire 1 =% cout $end
$var wire 1 >% sum $end
$var wire 1 ?% w1 $end
$var wire 1 @% w2 $end
$var wire 1 A% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[50] $end
$scope module fA $end
$var wire 1 B% a $end
$var wire 1 C% b $end
$var wire 1 D% cin $end
$var wire 1 E% cout $end
$var wire 1 F% sum $end
$var wire 1 G% w1 $end
$var wire 1 H% w2 $end
$var wire 1 I% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[51] $end
$scope module fA $end
$var wire 1 J% a $end
$var wire 1 K% b $end
$var wire 1 L% cin $end
$var wire 1 M% cout $end
$var wire 1 N% sum $end
$var wire 1 O% w1 $end
$var wire 1 P% w2 $end
$var wire 1 Q% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[52] $end
$scope module fA $end
$var wire 1 R% a $end
$var wire 1 S% b $end
$var wire 1 T% cin $end
$var wire 1 U% cout $end
$var wire 1 V% sum $end
$var wire 1 W% w1 $end
$var wire 1 X% w2 $end
$var wire 1 Y% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[53] $end
$scope module fA $end
$var wire 1 Z% a $end
$var wire 1 [% b $end
$var wire 1 \% cin $end
$var wire 1 ]% cout $end
$var wire 1 ^% sum $end
$var wire 1 _% w1 $end
$var wire 1 `% w2 $end
$var wire 1 a% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[54] $end
$scope module fA $end
$var wire 1 b% a $end
$var wire 1 c% b $end
$var wire 1 d% cin $end
$var wire 1 e% cout $end
$var wire 1 f% sum $end
$var wire 1 g% w1 $end
$var wire 1 h% w2 $end
$var wire 1 i% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[55] $end
$scope module fA $end
$var wire 1 j% a $end
$var wire 1 k% b $end
$var wire 1 l% cin $end
$var wire 1 m% cout $end
$var wire 1 n% sum $end
$var wire 1 o% w1 $end
$var wire 1 p% w2 $end
$var wire 1 q% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[56] $end
$scope module fA $end
$var wire 1 r% a $end
$var wire 1 s% b $end
$var wire 1 t% cin $end
$var wire 1 u% cout $end
$var wire 1 v% sum $end
$var wire 1 w% w1 $end
$var wire 1 x% w2 $end
$var wire 1 y% w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[57] $end
$scope module fA $end
$var wire 1 z% a $end
$var wire 1 {% b $end
$var wire 1 |% cin $end
$var wire 1 }% cout $end
$var wire 1 ~% sum $end
$var wire 1 !& w1 $end
$var wire 1 "& w2 $end
$var wire 1 #& w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[58] $end
$scope module fA $end
$var wire 1 $& a $end
$var wire 1 %& b $end
$var wire 1 && cin $end
$var wire 1 '& cout $end
$var wire 1 (& sum $end
$var wire 1 )& w1 $end
$var wire 1 *& w2 $end
$var wire 1 +& w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[59] $end
$scope module fA $end
$var wire 1 ,& a $end
$var wire 1 -& b $end
$var wire 1 .& cin $end
$var wire 1 /& cout $end
$var wire 1 0& sum $end
$var wire 1 1& w1 $end
$var wire 1 2& w2 $end
$var wire 1 3& w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[60] $end
$scope module fA $end
$var wire 1 4& a $end
$var wire 1 5& b $end
$var wire 1 6& cin $end
$var wire 1 7& cout $end
$var wire 1 8& sum $end
$var wire 1 9& w1 $end
$var wire 1 :& w2 $end
$var wire 1 ;& w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[61] $end
$scope module fA $end
$var wire 1 <& a $end
$var wire 1 =& b $end
$var wire 1 >& cin $end
$var wire 1 ?& cout $end
$var wire 1 @& sum $end
$var wire 1 A& w1 $end
$var wire 1 B& w2 $end
$var wire 1 C& w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[62] $end
$scope module fA $end
$var wire 1 D& a $end
$var wire 1 E& b $end
$var wire 1 F& cin $end
$var wire 1 G& cout $end
$var wire 1 H& sum $end
$var wire 1 I& w1 $end
$var wire 1 J& w2 $end
$var wire 1 K& w3 $end
$upscope $end
$upscope $end
$scope begin adderStage[63] $end
$scope module fA $end
$var wire 1 L& a $end
$var wire 1 M& b $end
$var wire 1 N& cin $end
$var wire 1 O& cout $end
$var wire 1 P& sum $end
$var wire 1 Q& w1 $end
$var wire 1 R& w2 $end
$var wire 1 S& w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin DUMP_WAVE $end
$upscope $end
$scope begin READ_VECTORS $end
$var reg 64 T& A [63:0] $end
$var reg 64 U& B [63:0] $end
$var reg 1 V& CIN $end
$var reg 1 W& EXP_COUT $end
$var reg 64 X& EXP_SUM [63:0] $end
$var integer 32 Y& fd [31:0] $end
$var integer 32 Z& line [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 Z&
b10000000000000000000000000000011 Y&
b11001010 X&
0W&
0V&
b1100101 U&
b1100101 T&
0S&
0R&
0Q&
0P&
0O&
0N&
0M&
0L&
0K&
0J&
0I&
0H&
0G&
0F&
0E&
0D&
0C&
0B&
0A&
0@&
0?&
0>&
0=&
0<&
0;&
0:&
09&
08&
07&
06&
05&
04&
03&
02&
01&
00&
0/&
0.&
0-&
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0$&
0#&
0"&
0!&
0~%
0}%
0|%
0{%
0z%
0y%
0x%
0w%
0v%
0u%
0t%
0s%
0r%
0q%
0p%
0o%
0n%
0m%
0l%
0k%
0j%
0i%
0h%
0g%
0f%
0e%
0d%
0c%
0b%
0a%
0`%
0_%
0^%
0]%
0\%
0[%
0Z%
0Y%
0X%
0W%
0V%
0U%
0T%
0S%
0R%
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
1f
0e
1d
0c
0b
0a
1`
0_
1^
1]
1\
1[
1Z
0Y
1X
0W
0V
1U
0T
1S
1R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
1F
0E
1D
0C
0B
0A
1@
0?
0>
1=
0<
1;
1:
09
08
07
16
05
14
03
02
01
10
0/
0.
1-
0,
1+
1*
b11001010 )
b11001010 (
b1100101 '
b1100101 &
0%
b1100101 $
b1100101 #
0"
b11001010 !
$end
#5000
0"
0O&
0S&
0N&
0G&
0K&
0F&
0?&
0C&
0>&
07&
0;&
06&
0/&
03&
0.&
0'&
0+&
0&&
0}%
0#&
0|%
0u%
0y%
0t%
0m%
0q%
0l%
0e%
0i%
0d%
0]%
0a%
0\%
0U%
0Y%
0T%
0M%
0Q%
0L%
0E%
0I%
0D%
0=%
0A%
0<%
05%
09%
04%
0-%
01%
0,%
0%%
0)%
0$%
0{$
0!%
0z$
0s$
0w$
0r$
0k$
0o$
0j$
0c$
0g$
0b$
0[$
0_$
0Z$
0S$
0W$
0R$
0K$
0O$
0J$
0C$
0G$
0B$
0;$
0?$
0:$
03$
07$
02$
0+$
0/$
0*$
0#$
0'$
0"$
0y#
0}#
0x#
0q#
0u#
0p#
0i#
0m#
0h#
0a#
0e#
0`#
0Y#
0]#
0X#
0Q#
0U#
0P#
0I#
0M#
0H#
0A#
0E#
0@#
09#
0=#
08#
01#
05#
00#
0)#
0-#
0(#
0!#
0%#
0~"
0w"
0{"
0v"
0o"
0s"
0n"
0g"
0k"
0f"
0_"
0c"
0^"
0W"
0["
0V"
0O"
0S"
0N"
0G"
0K"
0F"
0?"
0C"
0>"
07"
0;"
06"
0/"
03"
0."
0'"
0+"
0&"
0}
0#"
0|
0u
0Y
0y
0T
0t
0M
0m
0A
0Q
0q
0<
0L
0l
04
0D
0\
0d
05
0E
0e
1.
0-
1>
0=
1V
0U
1^
0a
b0 (
0]
16
09
1F
0I
1N
1f
0i
1n
1v
1~
1("
10"
18"
1@"
1H"
1P"
1X"
1`"
1h"
1p"
1x"
1"#
1*#
12#
1:#
1B#
1J#
1R#
1Z#
1b#
1j#
1r#
1z#
1$$
1,$
14$
1<$
1D$
1L$
1T$
1\$
1d$
1l$
1t$
1|$
1&%
1.%
16%
1>%
1F%
1N%
1V%
1^%
1f%
1n%
1v%
1~%
1(&
10&
18&
1@&
1H&
b1111111111111111111111111111111111111111111111111111111111111111 !
b1111111111111111111111111111111111111111111111111111111111111111 )
1P&
1/
00
1?
0@
1W
0X
1_
0`
17
1G
1O
1g
1o
1w
1!"
1)"
11"
19"
1A"
1I"
1Q"
1Y"
1a"
1i"
1q"
1y"
1##
1+#
13#
1;#
1C#
1K#
1S#
1[#
1c#
1k#
1s#
1{#
1%$
1-$
15$
1=$
1E$
1M$
1U$
1]$
1e$
1m$
1u$
1}$
1'%
1/%
17%
1?%
1G%
1O%
1W%
1_%
1g%
1o%
1w%
1!&
1)&
11&
19&
1A&
1I&
1Q&
0+
0;
0S
0[
12
1B
1J
1b
1j
1r
1z
1$"
1,"
14"
1<"
1D"
1L"
1T"
1\"
1d"
1l"
1t"
1|"
1&#
1.#
16#
1>#
1F#
1N#
1V#
1^#
1f#
1n#
1v#
1~#
1($
10$
18$
1@$
1H$
1P$
1X$
1`$
1h$
1p$
1x$
1"%
1*%
12%
1:%
1B%
1J%
1R%
1Z%
1b%
1j%
1r%
1z%
1$&
1,&
14&
1<&
1D&
1L&
b0 $
b0 '
b1111111111111111111111111111111111111111111111111111111111111111 #
b1111111111111111111111111111111111111111111111111111111111111111 &
b1111111111111111111111111111111111111111111111111111111111111111 X&
b0 U&
b1111111111111111111111111111111111111111111111111111111111111111 T&
b10 Z&
#10000
1l
1e
0f
1i
1d
1]
0^
1a
1\
1U
0V
1Y
1T
1M
0N
1Q
1L
1E
0F
1I
1D
1=
0>
1A
1<
15
06
19
14
0.
b111111110 (
1-
1n
0v
0~
0("
00"
08"
0@"
0H"
0P"
0X"
0`"
0h"
0p"
0x"
0"#
0*#
02#
0:#
0B#
0J#
0R#
0Z#
0b#
0j#
0r#
0z#
0$$
0,$
04$
0<$
0D$
0L$
0T$
0\$
0d$
0l$
0t$
0|$
0&%
0.%
06%
0>%
0F%
0N%
0V%
0^%
0f%
0n%
0v%
0~%
0(&
00&
08&
0@&
0H&
b100000000 !
b100000000 )
0P&
0/
10
0o
0w
0!"
0)"
01"
09"
0A"
0I"
0Q"
0Y"
0a"
0i"
0q"
0y"
0##
0+#
03#
0;#
0C#
0K#
0S#
0[#
0c#
0k#
0s#
0{#
0%$
0-$
05$
0=$
0E$
0M$
0U$
0]$
0e$
0m$
0u$
0}$
0'%
0/%
07%
0?%
0G%
0O%
0W%
0_%
0g%
0o%
0w%
0!&
0)&
01&
09&
0A&
0I&
0Q&
1+
0j
0r
0z
0$"
0,"
04"
0<"
0D"
0L"
0T"
0\"
0d"
0l"
0t"
0|"
0&#
0.#
06#
0>#
0F#
0N#
0V#
0^#
0f#
0n#
0v#
0~#
0($
00$
08$
0@$
0H$
0P$
0X$
0`$
0h$
0p$
0x$
0"%
0*%
02%
0:%
0B%
0J%
0R%
0Z%
0b%
0j%
0r%
0z%
0$&
0,&
04&
0<&
0D&
0L&
b1 $
b1 '
b11111111 #
b11111111 &
b100000000 X&
b1 U&
b11111111 T&
b11 Z&
#15000
0n
0l
0e
1f
0i
0d
0]
1^
0a
0\
0U
1V
0Y
0T
0M
1N
0Q
0L
0E
1F
0I
0D
0=
1>
0A
0<
05
16
09
04
b11111111 !
b11111111 )
1.
b0 (
0-
1/
00
1;
1K
1[
0*
0:
0J
0Z
b1010101 $
b1010101 '
b10101010 #
b10101010 &
b11111111 X&
b1010101 U&
b10101010 T&
b100 Z&
#20000
1d
1]
0^
1a
1\
1U
0V
1Y
1T
1M
0N
1Q
1L
1E
0F
1I
1D
1=
0>
1A
1<
15
06
19
14
1-
b10000001 !
b10000001 )
1f
0/
10
0g
1,
0;
0K
0[
1*
1:
1J
1Z
0b
b11111111 (
1%
b1 $
b1 '
b1111111 #
b1111111 &
b10000001 X&
1V&
b1 U&
b1111111 T&
b101 Z&
#25000
0P"
0N"
0G"
0K"
0F"
0?"
0C"
0>"
0d
07"
0]
0;"
1^
0a
06"
0\
0/"
0U
03"
1V
0Y
0."
0T
0'"
0M
0+"
1N
0Q
0&"
0L
0}
0E
0#"
1F
0I
0|
0D
0u
0=
0y
1>
0A
0t
0<
0m
05
0q
16
09
0l
04
0e
0-
1v
1("
10"
1@"
1f
0i
1n
1~
18"
b1111111111111111 !
b1111111111111111 )
1H"
1/
00
1w
1)"
11"
1A"
1g
1o
1!"
19"
1I"
0,
0+
13
1C
1K
1[
1s
1%"
1-"
1="
02
0B
0J
0Z
1b
1j
1z
14"
1D"
b0 (
0%
b101101001011010 $
b101101001011010 '
b1010010110100101 #
b1010010110100101 &
b1111111111111111 X&
0V&
b101101001011010 U&
b1010010110100101 T&
b110 Z&
#30000
06
0F
0^
0v
0("
00"
0@"
0.
0>
0f
0n
0~
08"
b110000 !
b110000 )
0H"
07
0G
0_
0w
0)"
01"
0A"
0/
0?
0g
0o
0!"
09"
0I"
03
0C
0K
1S
0[
0s
0%"
0-"
0="
0*
0:
1J
0R
0b
0j
0z
04"
0D"
b100000 $
b100000 '
b10000 #
b10000 &
b110000 X&
b100000 U&
b10000 T&
b111 Z&
#35000
1n
1l
1e
1i
1d
1]
1a
1\
1U
0V
1Y
1T
1M
0N
1Q
1L
1E
1I
1D
1=
1A
1<
15
19
14
1-
06
0>
0F
0^
b100000000 !
b100000000 )
0f
11
1/
17
1?
1G
1_
1g
1,
1+
0S
12
1:
1B
1R
1Z
1b
b111111111 (
1%
b1 $
b1 '
b11111110 #
b11111110 &
b100000000 X&
1V&
b1 U&
b11111110 T&
b1000 Z&
#40000
